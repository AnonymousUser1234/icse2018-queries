SWT
75739
90ec89fa4cf090b09860b44b1ea372f41ab1cdef
Variant has no toString() The Variant class has no toString() and one cannot call getString() in all cases since it throws an Exception if the type is VT_EMPTY. So I suggest: /** * Always returns a String. * &amp;#64;param variant * &amp;#64;return a String */ public static String toString() { if (this.getType() == COM.VT_EMPTY) { return &amp;quot;&amp;quot;; } return this.getString(); } Version 3.1.M2.
has no The class has no and one cannot call in all cases since it throws an Exception if the type is. So I suggest: /** * Always returns a String. * &amp;#64;param variant * &amp;#64;return a String */ Version 3.1.M2.
******
org.eclipse.swt.ole.win32.Variant.toString(),True
#####
SWT
77948
e181b6e9188cddf2a587544c0109556e814864e2;1b94542e397a999898bd881450caadc848cde4e3
NullPointerException in CLabel.findMnemonic I200411041200, GTK+ 2.4.9, KDE 3.3.0, Linux 2.6.9 I was creating new simple files in existing projects, and then deleting them. I was using the keyboard heavily for navigation. I found the exception below in the log. There was no major effect from this null pointer, but it might have been responsible for some buttons not disabling when they should. I'll investiage more. !ENTRY org.eclipse.ui 4 4 2004-11-05 08:51:21.199 !MESSAGE Unhandled event loop exception !ENTRY org.eclipse.ui 4 0 2004-11-05 08:51:21.235 !MESSAGE java.lang.NullPointerException !STACK 0 java.lang.NullPointerException at org.eclipse.swt.custom.CLabel.findMnemonic(CLabel.java:194) at org.eclipse.swt.custom.CLabel.onMnemonic(CLabel.java:334) at org.eclipse.swt.custom.CLabel$3.keyTraversed(CLabel.java:126) at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:221) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:989) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1013) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:998) at org.eclipse.swt.widgets.Control.traverse(Control.java:3088) at org.eclipse.swt.widgets.Control.translateMnemonic(Control.java:2992) at org.eclipse.swt.widgets.Composite.translateMnemonic(Composite.java:811) at org.eclipse.swt.widgets.Composite.translateMnemonic(Composite.java:816) at org.eclipse.swt.widgets.Composite.translateMnemonic(Composite.java:816) at org.eclipse.swt.widgets.Composite.translateMnemonic(Composite.java:816) at org.eclipse.swt.widgets.Composite.translateMnemonic(Composite.java:816) at org.eclipse.swt.widgets.Composite.translateMnemonic(Composite.java:816) at org.eclipse.swt.widgets.Composite.translateMnemonic(Composite.java:816) at org.eclipse.swt.widgets.Control.translateMnemonic(Control.java:3011) at org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:1855) at org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java:451) at org.eclipse.swt.widgets.Tree.gtk_key_press_event(Tree.java:637) at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1325) at org.eclipse.swt.widgets.Display.windowProc(Display.java:3214) at org.eclipse.swt.internal.gtk.OS.gtk_widget_event(Native Method) at org.eclipse.swt.widgets.Control.gtk_mnemonic_activate(Control.java:1899) at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1330) at org.eclipse.swt.widgets.Display.windowProc(Display.java:3214) at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method) at org.eclipse.swt.widgets.Display.eventProc(Display.java:901) at org.eclipse.swt.internal.gtk.OS.g_main_context_iteration(Native Method) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2363) at org.eclipse.jface.window.Window.runEventLoop(Window.java:718) at org.eclipse.jface.window.Window.open(Window.java:696) at org.eclipse.ui.actions.NewWizardAction.run(NewWizardAction.java:172) at org.eclipse.jface.action.Action.runWithEvent(Action.java:988) at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:188) at org.eclipse.ui.internal.commands.Command.execute(Command.java:130) at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:445) at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:724) at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:767) at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:536) at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2 (WorkbenchKeyboard.java:479) at org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:221) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82) at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1058) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:988) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1013) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:998) at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1025) at org.eclipse.swt.widgets.Widget.gtk_key_press_event(Widget.java:593) at org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:1866) at org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java:451) at org.eclipse.swt.widgets.Tree.gtk_key_press_event(Tree.java:637) at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1325) at org.eclipse.swt.widgets.Display.windowProc(Display.java:3214) at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method) at org.eclipse.swt.widgets.Display.eventProc(Display.java:901) at org.eclipse.swt.internal.gtk.OS.g_main_context_iteration(Native Method) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2363) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1527) at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1498) at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:276) at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144) at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102) at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60) at java.lang.reflect.Method.invoke(Method.java:391) at org.eclipse.core.launcher.Main.basicRun(Main.java:185) at org.eclipse.core.launcher.Main.run(Main.java:684) at org.eclipse.core.launcher.Main.main(Main.java:668)
NullPointerException in I200411041200, GTK+ 2.4.9, KDE 3.3.0, Linux 2.6.9 I was creating new simple files in existing projects, and then deleting them. I was using the keyboard heavily for navigation. I found the exception below in the log. There was no major effect from this null pointer, but it might have been responsible for some buttons not disabling when they should. I'll investiage more. !ENTRY 4 4 2004-11-05 08:51:21.199 !MESSAGE Unhandled event loop exception !ENTRY 4 0 2004-11-05 08:51:21.235 !MESSAGE 
******
org.eclipse.swt.custom.CLabel.findMnemonic(String),True
org.eclipse.swt.custom.CLabel.onMnemonic(TraverseEvent),True
#####
SWT
78548
80655505c378a6c724f27ab9fd5e89b9aec1adc6;3b0705af4949799a7bdad553d998188a5ae0bb41
[consistency] Button Selection fires before MouseUp- run the ControlExample, Button tab - turn on listeners MouseUp and Selection - click on an example Button -&amp;gt; on OSX you'll get Selection - MouseUp -&amp;gt; everywhere else you'll get MouseUp - Selection
[consistency] Button fires before - run the , Button tab - turn on listeners and - click on an example Button -&amp;gt; on OSX you'll get -  -&amp;gt; everywhere else you'll get  - Selection
******
org.eclipse.swt.widgets.Button.kEventMouseDown(int, int, int),True
org.eclipse.swt.widgets.ToolItem.kEventMouseDown(int, int, int),True
#####
SWT
78559
c3babe73736dabc765cb0e6ff100cd524ced3529
[consistency] Slider fires two Selection events before MouseDown - run the ControlExample, Slider/Scale tab - turn on the MouseDown and Selection listeners - click on the example Slider's thumb -&amp;gt; on OSX the following is fired: Selection, Selection, MouseDown -&amp;gt; on win32 the following is fired: MouseDown, Selection, Selection (&lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=78558" title="RESOLVED WONTFIX - [consistency] Slider fires two selection events on single click"&gt;bug 78558&lt;/a&gt;&lt;/span&gt;) -&amp;gt; everywhere else: MouseDown, Selection
[consistency]  fires two  events before  - run the, / tab - turn on the  and  listeners - click on the example 's thumb -&amp;gt; on OSX the following is fired: , ,  -&amp;gt; on win32 the following is fired: , ,  (&lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=78558" title="RESOLVED WONTFIX - [consistency]  fires two selection events on single click"&gt;bug 78558&lt;/a&gt;&lt;/span&gt;) -&amp;gt; everywhere else: , 
******
org.eclipse.swt.widgets.Slider.actionProc (int, int),True
#####
SWT
79107
091665570745aef222f626bdb7bde8ef106df286;3e1412832c437c4b4192bd508a7ca98ba639ef47;f302f87369c16404fa6c4d15137c2070c9b0c600;5aa729a4435cbc3bc39b7010a99ea938c612d744;19d2569ce5ee65765596a132b9028fabd8dd8542;02dc114b9675bb653f66a27101cc4acf22e3be3f;2d963a5f8053950432c47f2f10c67d3d35d59661;7460f398f4aff7bc31e8034651e2181376b83e54
[consistency] setItems(String[]) with null elements Check if all platforms stop at null or ignore null elements.
[consistency] with null elements Check if all platforms stop at null or ignore null elements.
******
org.eclipse.swt.custom.CCombo.setItems(String[]),True
org.eclipse.swt.custom.PopupList.getItems(),False,changed_comments
org.eclipse.swt.custom.PopupList.select(String),False,changed_comments
org.eclipse.swt.custom.PopupList.getFont(),False,changed_comments
org.eclipse.swt.custom.PopupList.setFont(Font),False,changed_comments
org.eclipse.swt.custom.PopupList.setItems(String[]),False,changed_comments
org.eclipse.swt.widgets.Combo.setItems(String[]),True
org.eclipse.swt.widgets.List.setItems(String[]),True
#####
SWT
79481
53589931c57a2758ce0fb761e62dab57822faf93
Sash no longer draggable when too small Hi, see this snippet: public class Main { public static void main(String[] args) { final Display display = new Display(); Shell shell = new Shell(display); shell.setLayout(new FillLayout()); SashForm form = new SashForm(shell, SWT.HORIZONTAL | SWT.SMOOTH); form.setLayout(new FillLayout()); Composite child1 = new Composite(form, SWT.NONE); child1.setLayout(new FillLayout()); new Label(child1, SWT.NONE).setText(&amp;quot;Label in pane 1&amp;quot;); Composite child2 = new Composite(form, SWT.NONE); child2.setLayout(new FillLayout()); new Button(child2, SWT.PUSH).setText(&amp;quot;Button in pane2&amp;quot;); Composite child3 = new Composite(form, SWT.NONE); child3.setLayout(new FillLayout()); new Label(child3, SWT.PUSH).setText(&amp;quot;Label in pane3&amp;quot;); form.setWeights(new int[] { 30, 40, 30 }); shell.open(); while (!shell.isDisposed()) { if (!display.readAndDispatch()) display.sleep(); } display.dispose(); } } Grab the second Sash (right to the button), move it as far as possible to the left (the button becomes very thin). Try to grab the same Sash again. Notice that its not possible. Note: Bug does not occur when not using SWT.SMOOTH Suggestion: Its possible to size the button thiner, as without SWT.SMOOTH. I guess when using SWT.SMOOTh the button becomes that thin, that the Sash itself becomes invisible. The SashForm should not allow to resize the Sash to a smaller value than possible when not using SWT.SMOOTH. Ben
no longer draggable when too small Hi, see this snippet: Grab the second (right to the button), move it as far as possible to the left (the button becomes very thin). Try to grab the same again. Notice that its not possible. Note: Bug does not occur when not using Suggestion: Its possible to size the button thiner, as without. I guess when using the button becomes that thin, that the itself becomes invisible. The should not allow to resize the to a smaller value than possible when not using. Ben
******
org.eclipse.swt.custom.SashForm.onDragSash(Event),True
#####
SWT
80120
86cb9a350616b882ff0a827dd18f2f6b7b047272;b36771e33c8b3ae61bfb302294dbe921cbb1ae98
CTabFolder layout puts top right item one pixel to far to the right see the attachment, I have a toolbar on top right and it cuts a pixel out of the top corner, the layout should take into account the border of the CTabFolder.
layout puts top right item one pixel to far to the right see the attachment, I have a toolbar on top right and it cuts a pixel out of the top corner, the layout should take into account the border of the.
******
org.eclipse.swt.custom.CTabFolder.setButtonBounds(),True
#####
SWT
80276
99846edeaaf42dd613c1099c7c92ab8fe645379a
CBannerLayout calls Control.update too often CBannerLayout.layout() calls Control.update() all the time. Using update() is good for interactive resizing, but otherwise it is slow and should not be used. This code should be fixed to only call update() during resize, if at all.
calls too often calls all the time. is good for interactive resizing, but otherwise it is slow and should not be used. This code should be fixed to only call during resize, if at all.
******
org.eclipse.swt.custom.CBannerLayout.layout(Composite, boolean),True
#####
SWT
78854
0e625ec767979d6e48049d14afe483143aa90d70;ea2088161ff11ba4c1bcfcca3d37b7e836f9e64f
Memory leak in ClipboardProxy.getFunc() At the end of ClipboardProxy.getFunc() OS.gtk_selection_data_set() function is used. However this function copies data so tdata.pValue should be freed using OS.g_free().
Memory leak in At the end of function is used. However this function copies data so should be freed.
******
org.eclipse.swt.dnd.Clipboard.clearContents(int),True
org.eclipse.swt.dnd.Clipboard.setContents(Object[], Transfer[], int),True
org.eclipse.swt.dnd.DragSource.DragGetData(long, long, long, long, time),True
#####
SWT
81265
e3a284077475cfed7262b71636e1ab3448ca2fd8
background of tree is incorrect when disabled In Control Example, go to tree tab 1. change the background colour. 2. uncheck the enabled checbox The background of the node names changes to the default background, while the rest of the background remains the new background. In tabletree, the entire background of the table tree goes back to the default colour.
background of tree is incorrect when disabled In , go to tree tab 1. change the background colour. 2. uncheck the enabled checbox The background of the node names changes to the default background, while the rest of the background remains the new background. In, the entire background of the table tree goes back to the default colour.
******
org.eclipse.swt.widgets.Tree._getBackgroundPixel(),True
org.eclipse.swt.widgets.Tree._setBackgroundPixel(int),True
org.eclipse.swt.widgets.Tree.enableWidget(boolean),True
org.eclipse.swt.widgets.Tree.getBackgroundPixel(),True
org.eclipse.swt.widgets.Tree.getForegroundPixel(),True
org.eclipse.swt.widgets.Tree.setBounds (int, int, int, int, int),True
org.eclipse.swt.widgets.Tree.wmColorChild(int, int),True
org.eclipse.swt.widgets.Tree.wmNotifyChild(int, int),True
#####
SWT
80506
99b29e574c3edadef8e217baa099f2d4aa1af1d6;bbe9d18eb1e0aac9a66e40cca33357f5fff9adf2
[consistency] forceActive and setActive are inconsistent across platforms If a shell that hasn't been opened is forced active: on windows and mac, the current app loses focus, the shell becomes active, but can't be seen. on gtk and motif, if the shell isn't visible, nothing is done. import org.eclipse.swt.widgets.Display; import org.eclipse.swt.widgets.Shell; public class pr79504 { public static void main(String[] args) { final Display display = new Display(); Shell shell = new Shell(display); // shell.setActive(); shell.forceActive(); while (!shell.isDisposed()) { if (!display.readAndDispatch()) display.sleep(); } display.dispose(); } }]
[consistency] and are inconsistent across platforms If a shell that hasn't been opened is forced active: on windows and mac, the current app loses focus, the shell becomes active, but can't be seen. on gtk and motif, if the shell isn't visible, nothing is done.
******
org.eclipse.swt.widgets.Shell.forceActive(),True
org.eclipse.swt.widgets.Shell.setActive(),True
org.eclipse.swt.widgets.Shell.removeShellListener(ShellListener),True
org.eclipse.swt.tests.test_setActive(),False,test_method
#####
SWT
58185
c0a3d8afca03ba4a7fab48f55d3147b11c11b8d6
Eclipse fails to load oldstyle BMP files I have several old style BMP files. When I attempt to load them into an image eclipse runs out of memory. The problem appears to be that the WinBMPFileFormat class does not check the header of the file correctly before reading the image. In my case, I have a BMP file with the following header: 0x42 0x4d 0xca 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x4a 0x00 0x00 0x00 0xC0 0x00 0x00 0x00 0x10 0x00 0x10 0x00 0x01 0x00 0x04 0x00 Notice the 0x0c at offset 14. This indicates that the Bitmap info header is only 12 bytes long and not the 42 that is being assumed. This conforms to the BITMAPCOREHEADER. According to microsoft the information starting at offset 14 is either a BITMAPINFO or a BITMAPCOREINFO. The only way to tell the difference is to check the size. see: &lt;a href="http://msdn.microsoft.com/library/default.asp?url=/library/en"&gt;http://msdn.microsoft.com/library/default.asp?url=/library/en&lt;/a&gt;- us/gdi/bitmaps_7jaq.asp
Eclipse fails to load oldstyle BMP files I have several old style BMP files. When I attempt to load them into an image eclipse runs out of memory. The problem appears to be that the class does not check the header of the file correctly before reading the image. In my case, I have a BMP file with the following header: 0x42 0x4d 0xca 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x4a 0x00 0x00 0x00 0xC0 0x00 0x00 0x00 0x10 0x00 0x10 0x00 0x01 0x00 0x04 0x00 Notice the 0x0c at offset 14. This indicates that the info header is only 12 bytes long and not the 42 that is being assumed. This conforms to the. According to microsoft the information starting at offset 14 is either a or a. The only way to tell the difference is to check the size. see: &lt;a href="http://msdn.microsoft.com/library/default.asp?url=/library/en"&gt;http://msdn.microsoft.com/library/default.asp?url=/library/en&lt;/a&gt;- us/gdi/bitmaps_7jaq.asp
******
org.eclipse.swt.internal.image.WinBMPFileFormat.isFileFormat(LEDataInputStream),True
org.eclipse.swt.internal.image.WinBMPFileFormat.loadData(byte[]),True
org.eclipse.swt.internal.image.WinBMPFileFormat.loadData(byte[], int),True
org.eclipse.swt.internal.image.WinBMPFileFormat.loadPalette(byte[]),True
org.eclipse.swt.internal.image.WinBMPFileFormat.paletteFromBytes(byte[], int),True
#####
SWT
83251
b58cdf1ea7c665df95c22509fb3fe8f876d0cbf4;a10dbcc9ee33a985d2920cf431ec185a353fd9fd
Javadoc warnings in latest builds I will attach a patch to get rid of them.
Javadoc warnings in latest builds I will attach a patch to get rid of them.
******
org.eclipse.swt.custom.VerifyKeyListener.verifyKey(VerifyEvent),True
org.eclipse.swt.custom.ExtendedModifyListener.modifyText(ExtendedModifyEvent),False,changes_comments
org.eclipse.swt.custom.LineBackgroundListener.lineGetBackground(LineBackgroundEvent),False,changes_comments
org.eclipse.swt.custom.LineStyleListener.lineGetStyle(LineStyleEvent),True
org.eclipse.swt.custom.StyledText.addLineStyleListener(LineStyleListener),False,changes_comments
org.eclipse.swt.custom.StyledText.addVerifyKeyListener(VerifyKeyListener),False,changes_comments
org.eclipse.swt.custom.StyledText.removeBidiSegmentListener(BidiSegmentListener),False,changes_comments
org.eclipse.swt.custom.StyledText.emoveLineStyleListener(LineStyleListener),False,changes_comments
org.eclipse.swt.custom.StyledText.removeSelectionListener(SelectionListener),False,changes_comments
org.eclipse.swt.custom.StyledText.setClipboardContent(int, int, int),False,changes_comments
org.eclipse.swt.custom.StyledText.setTextLimit(int),False,changes_comments
org.eclipse.swt.custom.StyledTextContent.removeTextChangeListener(TextChangeListener),False,changes_comments
org.eclipse.swt.graphics.Region.translate(int, int),False,changes_comments
org.eclipse.swt.graphics.TextLayout.setAscent(int),False,changes_comments
org.eclipse.swt.graphics.TextLayout.setDescent(int),False,changes_comments
org.eclipse.swt.layout.FormAttachment.FormAttachment(),False,changes_comments
org.eclipse.swt.ole.win32.OleClientSite.OleClientSite(Composite, int, File),False,changes_comments
org.eclipse.swt.ole.win32.OleClientSite.OleClientSite(Composite, int, String),False,changes_comments
org.eclipse.swt.ole.win32.OleControlSite.OleControlSite(Composite, int, String),False,changes_comments
org.eclipse.swt.widgets.Dialog.getText(),False,changes_comments
org.eclipse.swt.widgets.Event.setBounds(Rectangle),False,changes_comments
org.eclipse.swt.widgets.Spinner.setPageIncrement(int),False,changes_comments
org.eclipse.swt.widgets.Table.clear(int),False,changes_comments
org.eclipse.swt.widgets.Table.clear(int, int),False,changes_comments
org.eclipse.swt.widgets.Table.clear(int[]),False,changes_comments
#####
SWT
82346
617caa16607996fc0c177bb61875b51fc5b46c90
CLabel disappears when given SWT.CENTER flag in constructor Not working (CLabel disappears): ... CLabel label = new CLabel(composite, SWT.SHADOW_IN | SWT.CENTER); label.setLayoutData(new GridData(GridData.FILL_HORIZONTAL)); ... Workaround: ... CLabel label = new CLabel(composite, SWT.SHADOW_IN); label.setAlignment(SWT.CENTER); label.setLayoutData(new GridData(GridData.FILL_HORIZONTAL)); ... Noticed this on Linux (gtk) , Eclipse 3.1M4
disappears when given flag in constructor Not working (disappears): Noticed this on Linux (gtk) , Eclipse 3.1M4
******
org.eclipse.swt.custom.CLabel.CLabel(Composite, int),True
org.eclipse.swt.custom.CLabel.checkStyle (int),True
org.eclipse.swt.custom.CLabel.getTotalSize(Image, String),True
#####
SWT
83699
cc9a02356d4e4178ac56d9d7d182b6f31981c638
Font reset to default after screen saver I20050125-0800 All editors and views using a StyledText widget have the font reset to default after coming back from my screen saver. Makes build I20050125-0800 unusable for me. Works if I replace org.eclipse.swt.win32_3.1.0 with the one from last I-build. This breakpoint gets hit when I return from the screen saver Thread [main] (Suspended (breakpoint at line 6820 in StyledText)) StyledText.setFont(Font) line: 6820 StyledText(Control).updateFont(Font, Font) line: 2913 StyledText(Composite).updateFont(Font, Font) line: 810 Canvas(Composite).updateFont(Font, Font) line: 807 Composite.updateFont(Font, Font) line: 807 Composite.updateFont(Font, Font) line: 807 Composite.updateFont(Font, Font) line: 807 Composite.updateFont(Font, Font) line: 807 Composite.updateFont(Font, Font) line: 807 Composite.updateFont(Font, Font) line: 807 Composite.updateFont(Font, Font) line: 807 Shell(Composite).updateFont(Font, Font) line: 807 Display.updateFont() line: 3379 Display.messageProc(int, int, int, int) line: 2276 OS.PeekMessageW(MSG, int, int, int, int) line: not available [native method] OS.PeekMessage(MSG, int, int, int, int) line: 2016 Display.readAndDispatch() line: 2510 Workbench.runEventLoop(Window$IExceptionHandler, Display) line: 1584 Workbench.runUI() line: 1550 Workbench.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 288 PlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 144 IDEApplication.run(Object) line: 102 1.run(Object) line: 225 EclipseStarter.run(Object) line: 274 EclipseStarter.run(String[], Runnable) line: 129 NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method] NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39 DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25 Method.invoke(Object, Object[]) line: 324 Main.basicRun(String[]) line: 255 Main.run(String[]) line: 811 Main.main(String[]) line: 795
Font reset to default after screen saver I20050125-0800 All editors and views using a widget have the font reset to default after coming back from my screen saver. Makes build I20050125-0800 unusable for me. Works if I replace with the one from last I-build. This breakpoint gets hit when I return from the screen saver Thread [main] (Suspended (breakpoint at line 6820 in
******
org.eclipse.swt.widgets.Control.updateFont(Font, Font),True
#####
SWT
79419
a1373f3d12b57912d35b6b97026600a51003812f;b15b789bd9013d6a08bb91df9965c073a245bb7e;2844382bf1358b6f709c1b7124705d64f6f2fd17;c3083eee66c31f711df96bc9fa5a037049276c51
[Preferences] Need a link component We need to create a some sort of component for preference pages to use for linking. We should look into pushing down the org.eclipse.ui.views.framelist mechanism possibly.
[Preferences] Need a link component We need to create a some sort of component for preference pages to use for linking. We should look into pushing down the mechanism possibly.
******
#####
SWT
83262
1f0c909756e74c5720c48382acfb63c8f38bf00f
rxvt pastes null terminator When pasting using the middle mouse button from StyledText into an rxvt window, it contains a null terminator at the end. Pasting from other applications like gedit or mozilla into rxvt does not show this behaviour, and this is not reproducable when pasting into an xterm. This problem exists on both Motif and GTK+. Since the X clipboard protocol has a string length field, we do not need to be null terminating these strings.
rxvt pastes null terminator When pasting using the middle mouse button from into an rxvt window, it contains a null terminator at the end. Pasting from other applications like gedit or mozilla into rxvt does not show this behaviour, and this is not reproducable when pasting into an xterm. This problem exists on both Motif and GTK+. Since the X clipboard protocol has a string length field, we do not need to be null terminating these strings.
******
org.eclipse.swt.dnd.RTFTransfer.javaToNative(Object, TransferData),True
org.eclipse.swt.dnd.TextTransfer.javaToNative(Object, TransferData),True
#####
SWT
80830
a9e5fac4cbb80454333d1d54a7a46fe45f5193a6
implement GC.drawFocus I20041208-gtk GC.drawFocus simply draws a solid line. This is correctly following the javadoc, that says that this may happend if drawing the focus is not supported. However: this seems like a serious limitation to anyone implementing custom widgets. Is there any chance that this will be implemented on GTK? This is really a dup of point 2 of &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=62424" title="RESOLVED WONTFIX - gc.drawFocus on linux does not use XOR drawing"&gt;bug 62424&lt;/a&gt;&lt;/span&gt;, however, it also mentions other things, so I filed this one separately.
implement I20041208-gtk simply draws a solid line. This is correctly following the javadoc, that says that this may happend if drawing the focus is not supported. However: this seems like a serious limitation to anyone implementing custom widgets. Is there any chance that this will be implemented on GTK? This is really a dup of point 2 of &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=62424" title="RESOLVED WONTFIX - on linux does not use XOR drawing"&gt;bug 62424&lt;/a&gt;&lt;/span&gt;, however, it also mentions other things, so I filed this one separately.
******
org.eclipse.swt.internal.gtk.OS._gtk_paint_focus(int, int, int, GdkRectangle, int, byte[], int, int, int, int),True
org.eclipse.swt.graphics.Device.init(),True
org.eclipse.swt.graphics.Device.release(),True
org.eclipse.swt.graphics.GC.drawFocus(int, int, int, int),True
#####
SWT
82905
77d1382828681694379384efa416ab4e553645b0
drawImage doesn't honor clip rect I tried both I20050104-1600 and 3.1M4 on different linux versions with gtk 2.2 and gtk 2.4. It seems that GC#drawImage(Image,int,int,int,int,int,int.int,int) will not honor the GC's clipping but draw over the whole client area if and only if SWT.NO_BACKGROUND is set and the image has an alpha channel. This should not happen! Steps to reproduce: I've attached a demo application which displays two custom tab stripe created by a custom canvas subclass. The first stripe uses NO_BACKGROUND. I think, that's valid (and works on Windows) because the canvas draws its own background (the real application does more than just filling it with a simple color) and otherwise, it would flicker (unfortunately, blitting alpha-images is quite slow with SWT). You will notice that in the first stripe, the tab text will vanish if you move the mouse over the tabs. This seems happen because everything is redrawn is parts of the stripe are updated and the images are drawn always and the texts only inside the clipping region. So the images overwrite the text outside of the clipping region.
doesn't honor clip rect I tried both I20050104-1600 and 3.1M4 on different linux versions with gtk 2.2 and gtk 2.4. It seems that GC# will not honor the GC's clipping but draw over the whole client area if and only if is set and the image has an alpha channel. This should not happen! Steps to reproduce: I've attached a demo application which displays two custom tab stripe created by a custom canvas subclass. The first stripe uses. I think, that's valid (and works on Windows) because the canvas draws its own background (the real application does more than just filling it with a simple color) and otherwise, it would flicker (unfortunately, blitting alpha-images is quite slow with SWT). You will notice that in the first stripe, the tab text will vanish if you move the mouse over the tabs. This seems happen because everything is redrawn is parts of the stripe are updated and the images are drawn always and the texts only inside the clipping region. So the images overwrite the text outside of the clipping region.
******
org.eclipse.swt.internal.gtk.gdk_draw_pixbuf(int, int, int, int, int, int, int, int, int, int, int, int),True
org.eclipse.swt.graphics.GC.void drawImageAlpha(Image, int, int, int, int, int, int, int, int, boolean simple, int, int),True
#####
SWT
84557
aae468902359c222878246ca5690fe9c8baf6c55
Table item does not appear in table I am running I20050202-0800 linux gtk ctrl esc E brings up the handy switch to editor window, but unfortuantley the list is empty :(
Table item does not appear in table I am running I20050202-0800 linux gtk ctrl esc E brings up the handy switch to editor window, but unfortuantley the list is empty :(
******
org.eclipse.swt.widgets.TreeColumn.setWidth(int),True
org.eclipse.swt.widgets.TableColumn.setWidth(int),True
#####
SWT
86000
ecb485697a0e118e07d73184e7bece4f4b3e57b0
ImageLoader Save - produces invalid JPEG images The ImageLoader Save function appears to be producing bad JPG images. I have only verified this with JPEG output. Simple test case below loads PNG Files and Saves them as JPEG. Many files were tested and the majority did produced the proper JPG images as expected. The attached Zip file contains only those files that did not save correctly to JPEG. package com.ibm.test.image; import org.eclipse.swt.*; import org.eclipse.swt.graphics.*; public class ImageLoaderTest { public static void main(String[] args) { ImageLoader loader; String dir=&amp;quot;c:\\image-problems\\&amp;quot;; String files[]={ &amp;quot;s34i3p04&amp;quot;, &amp;quot;s34n3p04&amp;quot;, &amp;quot;s35i3p04&amp;quot;, &amp;quot;s35n3p04&amp;quot;, &amp;quot;s36i3p04&amp;quot;, &amp;quot;s36n3p04&amp;quot;, &amp;quot;s37i3p04&amp;quot;, &amp;quot;s37n3p04&amp;quot;, &amp;quot;s38i3p04&amp;quot;, &amp;quot;s38n3p04&amp;quot;, &amp;quot;s39i3p04&amp;quot;, &amp;quot;s39n3p04&amp;quot; }; try { for (int i=0; i&amp;lt;files.length; i++) { String filein = dir+files[i]+&amp;quot;.png&amp;quot;; String fileout = dir+files[i]+&amp;quot;.jpg&amp;quot;; loader = new ImageLoader(); loader.load(filein); loader.save(fileout,SWT.IMAGE_JPEG); } } catch (SWTException e) { e.printStackTrace(); } } }
Save - produces invalid JPEG images The Save function appears to be producing bad JPG images. I have only verified this with JPEG output. Simple test case below loads PNG Files and Saves them as JPEG. Many files were tested and the majority did produced the proper JPG images as expected. The attached Zip file contains only those files that did not save correctly to JPEG.
******
org.eclipse.swt.internal.image.JPEGFileFormat.convert4BitRGBToYCbCr(ImageData),True
#####
SWT
84012
5327c2c23bd9914b12852e726b79f4cac331c92a
StyledText with SWT.WRAP style does not adjust selection correctly When selecting text in the native Windows text widget, it is possible to extend the selection to the beginning (end) of a line by moving the mouse cursor beyond the left (right) edge of the widget's client area. In a StyledText widget with SWT.WRAP style, this does not work. When handling mouse move events, the StyledText discards all cases in which the horizontal mouse position lies outside its client area while the vertical coordinate translates to the same line the caret is currently on. This means that if the mouse movement is too quick (resulting in not receiving enough mouse move events to cover all the caret positions up to the left(right)most one), the selection will remain incomplete. See the attached screenshot for some visual clarification. Ignoring events outside the client area is apparently done in order not to confuse the (horizontal) auto-scroll mechanism that may also kick in on mouse movements. However, when the SWT.WRAP style is set, there is no horizontal auto-scrolling. Therefore, the fix is to introduce a check to see if the word-wrap option is turned on and allow extending the selection if it is. --- import org.eclipse.swt.*; import org.eclipse.swt.custom.*; import org.eclipse.swt.graphics.*; import org.eclipse.swt.layout.*; import org.eclipse.swt.widgets.*; public class StyledTextSelectionTest { public static void main(String[] args) { Display display = new Display(); Shell shell = new Shell(display); FillLayout layout = new FillLayout(SWT.VERTICAL); layout.marginWidth = 20; layout.marginHeight = 20; layout.spacing = 20; shell.setLayout(layout); Font font = new Font(display, &amp;quot;Arial&amp;quot;, 12, SWT.NORMAL); StyledText text1 = new StyledText(shell, SWT.BORDER | SWT.MULTI | SWT.WRAP | SWT.V_SCROLL); text1.setFont(font); text1.setText(&amp;quot;StyledText widget with SWT.WRAP style.&amp;quot;); Text text2 = new Text(shell, SWT.BORDER | SWT.MULTI | SWT.WRAP | SWT.V_SCROLL); text2.setFont(font); text2.setText(&amp;quot;Native text widget with SWT.WRAP style.&amp;quot;); shell.setSize(400, 300); shell.open(); while (!shell.isDisposed()) { if (!display.readAndDispatch()) { display.sleep(); } } font.dispose(); display.dispose(); } }
with style does not adjust selection correctly When selecting text in the native Windows text widget, it is possible to extend the selection to the beginning (end) of a line by moving the mouse cursor beyond the left (right) edge of the widget's client area. In a widget with style, this does not work. When handling mouse move events, the discards all cases in which the horizontal mouse position lies outside its client area while the vertical coordinate translates to the same line the caret is currently on. This means that if the mouse movement is too quick (resulting in not receiving enough mouse move events to cover all the caret positions up to the left(right)most one), the selection will remain incomplete. See the attached screenshot for some visual clarification. Ignoring events outside the client area is apparently done in order not to confuse the (horizontal) auto-scroll mechanism that may also kick in on mouse movements. However, when the style is set, there is no horizontal auto-scrolling. Therefore, the fix is to introduce a check to see if the word-wrap option is turned on and allow extending the selection if it is.
******
org.eclipse.swt.custom.StyledText.doMouseLocationChange(int, int, boolean),True
#####
SWT
87363
c3aa5c7e0128a8f707614484bb210d2959707428
Regression: MenuDetect no longer opens new menus Bug introduced Nov 5, 2004. Prior to change Control.showMenu did this: boolean showMenu (int x, int y) { Event event = new Event (); event.x = x; event.y = y; sendEvent (SWT.MenuDetect, event); if (!event.doit) return true; if (menu != null &amp;amp;&amp;amp; !menu.isDisposed ()) { if (x != event.x || y != event.y) { menu.setLocation (event.x, event.y); } menu.setVisible (true); return true; } return false; } If a menu was created during the MenuDetect listener notification, the menu field was updated and the menu was set visible. After Nov 5, 2004 the method was moved to Widget and now looks like this: boolean showMenu (Menu menu, int x, int y) { Event event = new Event (); event.x = x; event.y = y; sendEvent (SWT.MenuDetect, event); if (!event.doit) return true; if (menu != null &amp;amp;&amp;amp; !menu.isDisposed ()) { if (x != event.x || y != event.y) { menu.setLocation (event.x, event.y); } menu.setVisible (true); return true; } return false; } Since menu is just a local variable, it is not updated when a menu is created in the MenuDetect event. The following example demonstrates the problem: public static void main(String[] args) { Display display = new Display(); final Shell shell = new Shell(display); shell.addListener(SWT.MenuDetect, new Listener() { int count = 0; public void handleEvent(Event event) { Menu menu = shell.getMenu(); if (menu != null) menu.dispose(); menu = new Menu(shell, SWT.POP_UP); MenuItem item = new MenuItem(menu, SWT.PUSH); item.setText(&amp;quot;Menu &amp;quot; + count++); shell.setMenu(menu); } }); shell.pack(); shell.open(); while (!shell.isDisposed()) { if (!display.readAndDispatch()) display.sleep(); } display.dispose(); }
Regression: no longer opens new menus Bug introduced Nov 5, 2004. Prior to change did this: If a menu was created during the listener notification, the menu field was updated and the menu was set visible. After Nov 5, 2004 the method was moved to and now looks like this: Since menu is just a local variable, it is not updated when a menu is created in the event. The following example demonstrates the problem
******
org.eclipse.swt.widgets.Table.wmNotifyChild (int, int),True
org.eclipse.swt.widgets.Text.WM_LBUTTONDOWN (int, int),True
org.eclipse.swt.widgets.Tree.wmNotifyChild (int, int),True
org.eclipse.swt.widgets.Widget.showMenu (Menu, int, int),True
org.eclipse.swt.widgets.Widget.wmIMEChar (int, int, int),True
#####
SWT
87676
dbcf617c3014caea0ed6c0653866bb16c67441cc
Double-click only works on a tree's column0 Build I-20050308 Using the log view as an example, double-clicking on column0 brings up the event dialog as it should. double-clicking on column1, column2 results in no notification to our double- click listener.
Double-click only works on a tree's column0 Build I-20050308 Using the log view as an example, double-clicking on column0 brings up the event dialog as it should. double-clicking on column1, column2 results in no notification to our double- click listener.
******
org.eclipse.swt.widgets.Tree.WM_LBUTTONDBLCLK (int, int),True
#####
SWT
86294
116292d1bed8e86a80cf388e9d681c8e8491ddde
Find/Replace not working "Illegal/Unsupported escape on the Mac I can't do a search on a java file with the M5a build on the Mac. Find: mask4 &amp;quot;Illegal/unsupported escape&amp;quot; comes up in the Find / Replace dialog.
Find/Replace not working "Illegal/Unsupported escape on the Mac I can't do a search on a java file with the M5a build on the Mac. Find: mask4 &amp;quot;Illegal/unsupported escape&amp;quot; comes up in the Find / Replace dialog.
******
org.eclipse.swt.widgets.Combo.getClipboardText(),True
org.eclipse.swt.widgets.Spinner.paste(),True
org.eclipse.swt.widgets.Text.getClipboardText(),True
#####
SWT
87855
d8ec5bd674c9f38b94baa468b59c96ddbe13d4b5
NullPointerException in Table.callWindowProc Here is a stack trace I found when trying to kill a running process by pressing the &amp;quot;kill&amp;quot; button in the console view. I use 3.1M5a. !ENTRY org.eclipse.ui 4 0 2005-03-12 14:26:25.58 !MESSAGE java.lang.NullPointerException !STACK 0 java.lang.NullPointerException at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:156) at org.eclipse.swt.widgets.Table.sendMouseDownEvent(Table.java:2084) at org.eclipse.swt.widgets.Table.WM_LBUTTONDOWN(Table.java:3174) at org.eclipse.swt.widgets.Control.windowProc(Control.java:3057) at org.eclipse.swt.widgets.Display.windowProc(Display.java:3480) at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method) at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1619) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2539) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1612) at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1578) at org.eclipse.ui.internal.Workbench.createAndRunWorkbench (Workbench.java:293) at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144) at org.eclipse.ui.internal.ide.IDEApplication.run (IDEApplication.java:102) at org.eclipse.core.internal.runtime.PlatformActivator$1.run (PlatformActivator.java:228) at org.eclipse.core.runtime.adaptor.EclipseStarter.run (EclipseStarter.java:333) at org.eclipse.core.runtime.adaptor.EclipseStarter.run (EclipseStarter.java:150) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:585) at org.eclipse.core.launcher.Main.invokeFramework(Main.java:268) at org.eclipse.core.launcher.Main.basicRun(Main.java:260) at org.eclipse.core.launcher.Main.run(Main.java:887) at org.eclipse.core.launcher.Main.main(Main.java:871)
NullPointerException in Here is a stack trace I found when trying to kill a running process by pressing the &amp;quot;kill&amp;quot; button in the console view. I use 3.1M5a. !ENTRY 4 0 2005-03-12 14:26:25.58 !MESSAGE 
******
org.eclipse.swt.widgets.Table.callWindowProc(int, int, int, int),True
org.eclipse.swt.widgets.Tree.callWindowProc (int, int, int, int),True
#####
SWT
89533
222e4e9c76eea13b2a463a568f1d42c7108bda16
[Themes] Colors and Fonts preferences page has funny icons for color entries
[Themes] Colors and Fonts preferences page has funny icons for color entries
******
org.eclipse.swt.widgets.ImageList.set (int, Image, int),True
#####
SWT
90018
0d6dac42bf7b3b8e207b62e73a7f8c6506355bb0
Native tooltips left around on CTabFolder Hover over the PartStack CTabFolder inside eclipse until some native tooltip is displayed. For example, the maximize button. When the tooltip appears, change perspectives using the keybinding. the CTabFolder gets hidden, but its tooltip is permanently displayed and never goes away. Even if that CTabFolder is disposed (I'm assuming) when the perspective is closed.
Native tooltips left around on Hover over the inside eclipse until some native tooltip is displayed. For example, the maximize button. When the tooltip appears, change perspectives using the keybinding. the gets hidden, but its tooltip is permanently displayed and never goes away. Even if that is disposed (I'm assuming) when the perspective is closed.
******
org.eclipse.swt.custom.CTabFolder.onDispose(),True
#####
SWT
87997
085b889af5650eb15e24717fe078a26cb6d8533a
TableEditor.dispose( ) causes NPE if linked Table is being disposed Found in 3.1 I20050308-0835. TableEdtior.dispose( ) calls methods on it's owning Table to remove some listeners from the table's columns. If the table is in the process of being disposed, the columns will have already been disposed and this will result in a NPE. Specifically this prevents one from adding a dispose listener on the Table or a TableItem and trying to dispose of the associated editor, as in the code below. Further if the dispose listener is set on the parent of the Table, a &amp;quot;Widget is disposed&amp;quot; exception will be thrown instead of the NPE. This leaves no place to hook to trigger the disposal of the TableEditor. import org.eclipse.swt.custom.TableEditor; import org.eclipse.swt.events.*; import org.eclipse.swt.widgets.*; public class Test { public static void main( String[ ] args ) { Shell shell = new Shell( ); Table table = new Table( shell, 0 ); new TableColumn( table, 0 ); TableItem item = new TableItem( table, 0 ); final TableEditor editor = new TableEditor( table ); final Text text = new Text( table, 0 ); editor.setEditor( text, item, 0 ); item.addDisposeListener( new DisposeListener( ) { public void widgetDisposed( DisposeEvent e ) { text.dispose( ); editor.dispose( ); // Triggers a NPE } } ); shell.dispose( ); } }
causes NPE if linked is being disposed Found in 3.1 I20050308-0835. calls methods on it's owning to remove some listeners from the table's columns. If the table is in the process of being disposed, the columns will have already been disposed and this will result in a NPE. Specifically this prevents one from adding a dispose listener on the or a and trying to dispose of the associated editor, as in the code below. Further if the dispose listener is set on the parent of the Table, a &amp;quot; is disposed&amp;quot; exception will be thrown instead of the NPE. This leaves no place to hook to trigger the disposal of the 
******
org.eclipse.swt.widgets.Table.releaseWidget(),True
org.eclipse.swt.widgets.Tree.releaseWidget(),True
#####
SWT
88829
5a29085071ce35026e7617b6fc1fdd2bf7e3205a;d8412f497b9eda314dcd434f6c4eca9fa48d514e
Table.setColumnOrder() may not fire enough Move events - start with five columns, all different widths - do Table.setColumnOrder(new int[] {4,1,2,3,0}); - SWT.Move events are fired for columns 0 and 4 because they swapped positions -&amp;gt; but Move should have been fired for all of the columns since the width of the first displayed column changed, and therefore all of the other columns are auto-shifted accordingly
may not fire enough events - start with five columns, all different widths - do - events are fired for columns 0 and 4 because they swapped positions -&amp;gt; but should have been fired for all of the columns since the width of the first displayed column changed, and therefore all of the other columns are auto-shifted accordingly
******
org.eclipse.swt.widgets.Table.setColumnOrder(int[]),True
#####
SWT
86631
33b3d85737bcb5645b2c280ec92e2f0b556ab42b;48abe9274e7da06bdfb776d6c7585bcceb09c560
Javadoc wrong for Image(stream) The example code in the Javadoc indicates the stream doesn't have to be closed but it does. This needs to be fixed here and in other places in SWT where we accept streams. We need to determine the correct pattern of try {} catch () and apply it everywhere in the doc.
Javadoc wrong for The example code in the Javadoc indicates the stream doesn't have to be closed but it does. This needs to be fixed here and in other places in SWT where we accept streams. We need to determine the correct pattern of try {} catch () and apply it everywhere in the doc.
******
org.eclipse.swt.graphics.Image.Image(Device, InputStream),True
org.eclipse.swt.tests.junit.Test_org_eclipse_swt_graphics_ImageData.test_getTransparencyMask(),False,test_method
org.eclipse.swt.tests.junit.Test_org_eclipse_swt_graphics_ImageData.test_getTransparencyType(),False,test_method
#####
SWT
81242
8c1742e67c1e4d288877ced18ec4003ddd91b26c; 6cd1ca6632ac80e9ec1f495926ca79670db9ab98;24166eec52f9c1919c622e629830b521d9248411
[JUnit] GP in Clipboard.getContents PLUGIN_PATH &amp;lt;null&amp;gt; Resolved file name for empty.txt = bluebird/teamswt/torres/linux/motif/eclipse/workspace/org.eclipse.swt.tests/bin/empty.txt An unexpected exception has been detected in native code outside the VM. Unexpected Signal : 11 occurred at PC=0x0 Function=[Unknown.] Library=(N/A) NOTE: We are unable to locate the function name symbol for the error just occurred. Please refer to release documentation for possible reason and solutions. Current Java thread: at org.eclipse.swt.internal.motif.OS._XtGetSelectionValue(Native Method) at org.eclipse.swt.internal.motif.OS.XtGetSelectionValue(OS.java:3688) at org.eclipse.swt.dnd.ClipboardProxy.getAvailableTypes(ClipboardProxy.java:150) at org.eclipse.swt.dnd.ClipboardProxy.getContents(ClipboardProxy.java:118) at org.eclipse.swt.dnd.Clipboard.getContents(Clipboard.java:275) at org.eclipse.swt.dnd.Clipboard.getContents(Clipboard.java:223) at org.eclipse.swt.tests.junit.Test_org_eclipse_swt_custom_StyledText.test_copy(Test_org_eclipse_swt_custom_StyledText.java:555) at org.eclipse.swt.tests.junit.Test_org_eclipse_swt_custom_StyledText.runTest(Test_org_eclipse_swt_custom_StyledText.java:4198) at junit.framework.TestCase.runBare(TestCase.java:127) at junit.framework.TestResult$1.protect(TestResult.java:106) at junit.framework.TestResult.runProtected(TestResult.java:124) at junit.framework.TestResult.run(TestResult.java:109) at junit.framework.TestCase.run(TestCase.java:118) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:468) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:343) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:195) Dynamic libraries: 08048000-08056000 r-xp 00000000 00:0a 538294580 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/bin/java 08056000-08059000 rw-p 0000d000 00:0a 538294580 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/bin/java 40000000-40014000 r-xp 00000000 03:03 505027 /lib/ld-2.3.2.so 40014000-40015000 rw-p 00014000 03:03 505027 /lib/ld-2.3.2.so 40015000-4001d000 r-xp 00000000 00:0a 337128161 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/i386/native_threads/libhpi.so 4001d000-4001e000 rw-p 00007000 00:0a 337128161 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/i386/native_threads/libhpi.so 4001e000-40022000 rw-s 00000000 03:03 1988430 /tmp/hsperfdata_torres/20700 40022000-40030000 r--s 00000000 00:0a 386697846 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/ext/ldapsec.jar 40030000-40031000 r--s 00000000 00:0a 539462609 /bluebird/teamswt/torres/linux/motif/eclipse/plugins/org.eclipse.swt.motif_3.1.0/ws/motif/swt-gtk.jar 40032000-4003f000 r-xp 00000000 03:03 505047 /lib/libpthread.so.0 4003f000-40040000 rw-p 0000d000 03:03 505047 /lib/libpthread.so.0 40083000-40085000 r-xp 00000000 03:03 505036 /lib/libdl.so.2 40085000-40086000 rw-p 00001000 03:03 505036 /lib/libdl.so.2 40086000-401b5000 r-xp 00000000 03:03 505033 /lib/libc.so.6 401b5000-401b9000 rw-p 0012f000 03:03 505033 /lib/libc.so.6 401bc000-405b8000 r-xp 00000000 00:0a 369997783 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/i386/client/libjvm.so 405b8000-405d4000 rw-p 003fb000 00:0a 369997783 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/i386/client/libjvm.so 405e6000-405f8000 r-xp 00000000 03:03 505039 /lib/libnsl.so.1 405f8000-405f9000 rw-p 00011000 03:03 505039 /lib/libnsl.so.1 405fb000-4061c000 r-xp 00000000 03:03 505037 /lib/libm.so.6 4061c000-4061d000 rw-p 00020000 03:03 505037 /lib/libm.so.6 4061d000-4062d000 r-xp 00000000 00:0a 318930479 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/i386/libverify.so 4062d000-4062f000 rw-p 0000f000 00:0a 318930479 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/i386/libverify.so 4062f000-4064f000 r-xp 00000000 00:0a 318930480 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/i386/libjava.so 4064f000-40651000 rw-p 0001f000 00:0a 318930480 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/i386/libjava.so 40651000-40665000 r-xp 00000000 00:0a 318930482 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/i386/libzip.so 40665000-40668000 rw-p 00013000 00:0a 318930482 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/i386/libzip.so 40668000-413c9000 r--s 00000000 00:0a 285807727 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/rt.jar 41416000-4142d000 r--s 00000000 00:0a 285807737 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/sunrsasign.jar 4142d000-4149e000 r--s 00000000 00:0a 285800486 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/jsse.jar 4149e000-414b0000 r--s 00000000 00:0a 285807731 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/jce.jar 414b0000-41791000 r--s 00000000 00:0a 285807720 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/charsets.jar 43839000-4383c000 r--s 00000000 00:0a 386722929 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/ext/dnsns.jar 4383c000-4383e000 r-xp 00000000 03:03 684353 /usr/X11R6/lib/X11/locale/lib/common/xlcDef.so.2 4383e000-4383f000 rw-p 00001000 03:03 684353 /usr/X11R6/lib/X11/locale/lib/common/xlcDef.so.2 4b8c0000-4bac0000 r--p 00000000 03:03 2117686 /usr/lib/locale/locale-archive 4bac0000-4bb28000 r--s 00000000 00:0a 386697841 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/ext/localedata.jar 4bb28000-4bb44000 r--s 00000000 00:0a 386725087 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/ext/sunjce_provider.jar 4bb44000-4bb90000 r--s 00000000 00:0a 269221741 /bluebird/teamswt/torres/linux/motif/eclipse/plugins/org.eclipse.jdt.junit_3.1.0/junitsupport.jar 4bb90000-4bb95000 r--s 00000000 00:0a 253875361 /bluebird/teamswt/torres/linux/motif/eclipse/plugins/org.eclipse.jdt.junit.runtime_3.1.0/junitruntime.jar 4bb95000-4bbb3000 r--s 00000000 00:0a 386176619 /bluebird/teamswt/torres/linux/motif/eclipse/plugins/org.junit_3.8.1/junit.jar 4bbb3000-4bbc3000 r-xp 00000000 00:0a 319238016 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/i386/libnet.so 4bbc3000-4bbc4000 rw-p 0000f000 00:0a 319238016 /bluebird/teamswt/torres/linux/vm/jdk1.4.2_06/jre/lib/i386/libnet.so 4bbc4000-4bcc6000 r--s 00000000 00:0a 539462612 /bluebird/teamswt/torres/linux/motif/eclipse/plugins/org.eclipse.swt.motif_3.1.0/ws/motif/swt.jar 4bcc6000-4bcd3000 r--s 00000000 00:0a 539462610 /bluebird/teamswt/torres/linux/motif/eclipse/plugins/org.eclipse.swt.motif_3.1.0/ws/motif/swt-mozilla.jar 4bcd3000-4bce5000 r--s 00000000 00:0a 539462611 /bluebird/teamswt/torres/linux/motif/eclipse/plugins/org.eclipse.swt.motif_3.1.0/ws/motif/swt-pi.jar 4bce5000-4bd2c000 r-xp 00000000 00:0a 589158311 /bluebird/teamswt/torres/linux/motif/eclipse/plugins/org.eclipse.swt.motif_3.1.0/os/linux/x86/libswt-motif-3116.so 4bd2c000-4bd2f000 rw-p 00046000 00:0a 589158311 /bluebird/teamswt/torres/linux/motif/eclipse/plugins/org.eclipse.swt.motif_3.1.0/os/linux/x86/libswt-motif-3116.so 4bd30000-4beb4000 r-xp 00000000 00:0a 138076468 /bluebird/teamswt/torres/linux/motif/eclipse/libXm.so.2.1 4beb4000-4bec7000 rw-p 00183000 00:0a 138076468 /bluebird/teamswt/torres/linux/motif/eclipse/libXm.so.2.1 4bec8000-4bece000 r--s 00000000 03:03 602997 /usr/lib/gconv/gconv-modules.cache 4bece000-4bed0000 r-xp 00000000 03:03 602948 /usr/lib/gconv/ISO8859-1.so 4bed0000-4bed1000 rw-p 00001000 03:03 602948 /usr/lib/gconv/ISO8859-1.so 4bed1000-4beda000 r-xp 00000000 03:03 684357 /usr/X11R6/lib/X11/locale/lib/common/xomGeneric.so.2 4beda000-4bedb000 rw-p 00008000 03:03 684357 /usr/X11R6/lib/X11/locale/lib/common/xomGeneric.so.2 4bee5000-4bfaf000 r-xp 00000000 03:03 2150128 /usr/X11R6/lib/libX11.so.6.2 4bfaf000-4bfb3000 rw-p 000c9000 03:03 2150128 /usr/X11R6/lib/libX11.so.6.2 4bfb3000-4bfc1000 r-xp 00000000 03:03 2150138 /usr/X11R6/lib/libXext.so.6.4 4bfc1000-4bfc2000 rw-p 0000d000 03:03 2150138 /usr/X11R6/lib/libXext.so.6.4 4bfc2000-4c012000 r-xp 00000000 03:03 2150160 /usr/X11R6/lib/libXt.so.6.0 4c012000-4c015000 rw-p 00050000 03:03 2150160 /usr/X11R6/lib/libXt.so.6.0 4c016000-4c01d000 r-xp 00000000 03:03 2150152 /usr/X11R6/lib/libXp.so.6.2 4c01d000-4c01e000 rw-p 00006000 03:03 2150152 /usr/X11R6/lib/libXp.so.6.2 4c01e000-4c023000 r-xp 00000000 03:03 2150162 /usr/X11R6/lib/libXtst.so.6.1 4c023000-4c024000 rw-p 00004000 03:03 2150162 /usr/X11R6/lib/libXtst.so.6.1 4c024000-4c02c000 r-xp 00000000 03:03 2150126 /usr/X11R6/lib/libSM.so.6.0 4c02c000-4c02d000 rw-p 00007000 03:03 2150126 /usr/X11R6/lib/libSM.so.6.0 4c02d000-4c041000 r-xp 00000000 03:03 2150124 /usr/X11R6/lib/libICE.so.6.3 4c041000-4c043000 rw-p 00013000 03:03 2150124 /usr/X11R6/lib/libICE.so.6.3 4c044000-4c04c000 r-xp 00000000 03:03 2150136 /usr/X11R6/lib/libXcursor.so.1.0 4c04c000-4c04d000 rw-p 00007000 03:03 2150136 /usr/X11R6/lib/libXcursor.so.1.0 4c04d000-4c054000 r-xp 00000000 03:03 2150158 /usr/X11R6/lib/libXrender.so.1.2 4c054000-4c055000 rw-p 00006000 03:03 2150158 /usr/X11R6/lib/libXrender.so.1.2 4c055000-4c072000 r-xp 00000000 03:03 684352 /usr/X11R6/lib/X11/locale/lib/common/ximcp.so.2 4c072000-4c074000 rw-p 0001c000 03:03 684352 /usr/X11R6/lib/X11/locale/lib/common/ximcp.so.2 Heap at VM Abort: Heap def new generation total 2240K, used 108K [0x43840000, 0x43aa0000, 0x43d20000) eden space 2048K, 2% used [0x43840000, 0x4384b998, 0x43a40000) from space 192K, 32% used [0x43a70000, 0x43a7f870, 0x43aa0000) to space 192K, 0% used [0x43a40000, 0x43a40000, 0x43a70000) tenured generation total 28844K, used 28004K [0x43d20000, 0x4594b000, 0x47840000) the space 28844K, 97% used [0x43d20000, 0x458793e0, 0x45879400, 0x4594b000) compacting perm gen total 5120K, used 5054K [0x47840000, 0x47d40000, 0x4b840000) the space 5120K, 98% used [0x47840000, 0x47d2f920, 0x47d2fa00, 0x47d40000) Local Time = Wed Dec 15 11:11:45 2004 Elapsed Time = 107 # # The exception above was detected in native code outside the VM # # Java VM: Java HotSpot(TM) Client VM (1.4.2_06-b02 mixed mode) # # An error report file has been saved as hs_err_pid20700.log. # Please refer to the file for further information. #
[JUnit] GP in &amp;lt;null&amp;gt; Resolved file name for An unexpected exception has been detected in native code outside the Unexpected Signal : 11 occurred at PC=0x0 Function=[Unknown.] Library=(N/A) NOTE: We are unable to locate the function name symbol for the error just occurred. Please refer to release documentation for possible reason and solutions. Current Java thread: at The exception above was detected in native code outside the VM # # Java VM: Java HotSpot(TM) Client VM (1.4.2_06-b02 mixed mode) # # An error report file has been saved as hs_err_pid20700.log. # Please refer to the file for further information. #
******
org.eclipse.swt.dnd.ClipboardProxy._getInstance(Display),True
org.eclipse.swt.dnd.DragSource.DragSource(Control, int),True
org.eclipse.swt.dnd.DragSource.drag(Event),True
org.eclipse.swt.dnd.DragSource.onDispose(),True
org.eclipse.swt.dnd.DragSource.opToOsOp(int),True
org.eclipse.swt.dnd.DragSource.osOpToOp(int),True
org.eclipse.swt.dnd.DropTarget.FindDropTarget(int),True
org.eclipse.swt.dnd.DropTarget.drag_data_received(int, int, int, int, int, int, int),True
org.eclipse.swt.dnd.DropTarget.drag_drop(int, int, int, int, int),True
org.eclipse.swt.dnd.DropTarget.drag_leave(int, int, int),True
org.eclipse.swt.dnd.DropTarget.drag_motion(int, int, int , int , int),True
org.eclipse.swt.dnd.DropTarget.getOperationFromKeyState(),True
org.eclipse.swt.dnd.DropTarget.onDispose()opToOsOp(int),True
org.eclipse.swt.dnd.DropTarget.osOpToOp(int),True
org.eclipse.swt.dnd.DropTarget.setEventData(int, int, int, int, DNDEvent),True
org.eclipse.swt.dnd.DropTarget.updateDragOverHover(long, DNDEvent),True
org.eclipse.swt.accessibility.AccessibleFactoryAccessibleFactory(int),True
org.eclipse.swt.accessibility.registerAccessible(Accessible),True
org.eclipse.swt.accessibility.unregisterAccessible(Accessible),True
org.eclipse.swt.accessibility.newCallback(String, int),True
#####
SWT
92017
978a5068b13063ede30b740ed3c44a97b7570e39
Support very large Image on Windows platform Currently an Image on Windows is size-limited - on my system to 16MB. However, a posting in eclipse.platform.swt in response to &amp;quot;Larger image problems&amp;quot; suggested that there is a way to get OS.CreateCompatibleBitmap to transparently return a DIB that is stored in main memory and can be any size. If there is a way to easily support this, it'd be really helpful.
Support very large Image on Windows platform Currently an on Windows is size-limited - on my system to 16MB. However, a posting in in response to &amp;quot;Larger image problems&amp;quot; suggested that there is a way to get to transparently return a DIB that is stored in main memory and can be any size. If there is a way to easily support this, it'd be really helpful.
******
org.eclipse.swt.graphics.GC.createDIB(int, int),True
org.eclipse.swt.graphics.GC.createGdipBrush(),True
org.eclipse.swt.graphics.Image.init(Device, int, int),True
org.eclipse.swt.graphics.Image.createDIB(int, int, int),True
#####
SWT
88717
f38c6e259682997e3ae8e6c34beda9c0c421c9d4
[DND] Tree is scrolling very slow when dragging an Item to the Bottom Create a Tree with some items and implement DND support as explained in this Snippet: &lt;a href="http://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet91.java?rev=HEAD&amp;amp;content-type=text/vnd.viewcvs-markup"&gt;http://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet91.java?rev=HEAD&amp;amp;content-type=text/vnd.viewcvs-markup&lt;/a&gt; Now expand some items so that vertical scrollbars are appearing. When draggin an item to the bottom, the Tree is not scrolling. It is currently not possible to Drag an Item to a position that is out of view. I would have thought that DND.FEEDBACK_SCROLL enables automatic scrolling, in case the user drags an Item to the bottom but it does'nt. To see how its working, open Bookmark Manager in Firefox, expand items until the Scrollbars are showing and drag a Bookmark to the Bottom. The Tree is scrolling. Ben
[DND] is scrolling very slow when dragging an Item to the Bottom Create a with some items and implement DND support as explained in this Snippet: &lt;a href="http://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet91.java?rev=HEAD&amp;amp;content-type=text/vnd.viewcvs-markup"&gt;http://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet91.java?rev=HEAD&amp;amp;content-type=text/vnd.viewcvs-markup&lt;/a&gt; Now expand some items so that vertical scrollbars are appearing. When draggin an item to the bottom, the Tree is not scrolling. It is currently not possible to Drag an Item to a position that is out of view. I would have thought that enables automatic scrolling, in case the user drags an Item to the bottom but it does'nt. To see how its working, open Bookmark Manager in Firefox, expand items until the Scrollbars are showing and drag a Bookmark to the Bottom. The is scrolling. Ben
******
#####
SWT
92612
7d6d503ad1ede8b8859441bf5f1e15bb61e72635
CTabFolder hidden tabs count (in chevron) can become 0 0420 integration build (showed VI already) - drag several eclipse views into one view slot (eg.- on top of the Navigator) -&amp;gt; assuming that there isn't room to show all of the tabs, there will be a chevron shown with a number representing the number of hidden tabs - slowly make the top view more narrow, and as this makes the CTabFolder more narrow, the number of tabs that it can fit will shrink, and therefore the number below the chevron will grow - but you'll reach a point where this number becomes 0, when it should probably be equal to the number of tabs in the tabfolder
hidden tabs count (in chevron) can become 0 0420 integration build (showed VI already) - drag several eclipse views into one view slot (eg.- on top of the) -&amp;gt; assuming that there isn't room to show all of the tabs, there will be a chevron shown with a number representing the number of hidden tabs - slowly make the top view more narrow, and as this makes the more narrow, the number of tabs that it can fit will shrink, and therefore the number below the chevron will grow - but you'll reach a point where this number becomes 0, when it should probably be equal to the number of tabs in the
******
org.eclipse.swt.custom.CTabFolder.setItemLocation(),True
#####
SWT
92181
c5bbcb381ff9f0e3f7cb89808cd76c806bee353b
Bogus CTabFolder tab sizes Running the code in head, 20050421 In the default Java perspective, drag the problems view to the right of the JavaDoc view. The resulting CTabFolder tab sizes are wrong.
Bogus tab sizes Running the code in head, 20050421 In the default Java perspective, drag the problems view to the right of the JavaDoc view. The resulting tab sizes are wrong.
******
org.eclipse.swt.custom.CTabFolder.setSelection(CTabItem),True
org.eclipse.swt.custom.CTabFolder.setSelection(int),True
org.eclipse.swt.custom.CTabFolder.updateItems(int),False,changes_comments
#####
SWT
91159
880f7c18bcbb2dab95d17fcb60690d8f3e671fa8
[Consistency] DropTarget event.dataType field not alwys set on DragEnter On Windows in DragEnter the event.dataType field is set to the first value in the event.dataTypes array. On Carbon, GTK and Motif, the event.dataType field is null.
[Consistency] field not alwys set on On Windows in the field is set to the first value in the array. On Carbon, GTK and Motif, the field is null.
******
org.eclipse.swt.dnd.DropTarget.dragProcCallback(int, int, int),False,Formatting
org.eclipse.swt.dnd.DropTarget.setEventData(byte, byte, int, short, short),True
org.eclipse.swt.dnd.DropTarget.registerDropTarget(),False,Formatting
#####
SWT
79268
52e454d28131f1be4e3a39a7b162e4e4801aaf99;b870c180c5264e4710b448096258dee6e2d5f6ea
Program API does not work with GNOME 2.8 (libgnomevfs-WARNING) I200411170800-gtk Not sure what triggers it, neither who is doing it. I get the following stderr output once in a while: (&amp;lt;unknown&amp;gt;:27693): libgnomevfs-WARNING **: Deprecated function. User modifications to the MIME database are no longer supported. In my development workbench, the output reads: (Gecko:11501): libgnomevfs-WARNING **: Deprecated function. User modifications to the MIME database are no longer supported. So I suspect the mozilla/gecko library is doing this, hence I punted it to SWT. Probably nothing we can do much about, but here's the bug anyway.
API does not work with GNOME 2.8 (libgnomevfs-WARNING) I200411170800-gtk Not sure what triggers it, neither who is doing it. I get the following stderr output once in a while: (&amp;lt;unknown&amp;gt;:27693): libgnomevfs-WARNING **: Deprecated function. User modifications to the MIME database are no longer supported. In my development workbench, the output reads: (Gecko:11501): libgnomevfs-WARNING **: Deprecated function. User modifications to the MIME database are no longer supported. So I suspect the mozilla/gecko library is doing this, hence I punted it to SWT. Probably nothing we can do much about, but here's the bug anyway.
******
org.eclipse.swt.program.Program.getDesktop(Display),True
org.eclipse.swt.program.Program.findProgram(Display, String),True
org.eclipse.swt.program.Program.getExtensions(Display),True
org.eclipse.swt.program.Program.getPrograms(Display),True
org.eclipse.swt.program.Program.launch(Display, String),True
org.eclipse.swt.program.Program.execute(String),True
org.eclipse.swt.program.Program.getImageData(),True
#####
SWT
94467
bea611340b14926cc259d5dc2d4ef43e7ebe15e3;1b1ce5ded085389d01d094d9d62c7b7625f5f581
Table layouts which only lay out once are giving bogus sizes I20050510-0010 Use ctrl-shift-e to bring up the editor list. The list appears empty because all of the columns are set to zero size.
layouts which only lay out once are giving bogus sizes I20050510-0010 Use ctrl-shift-e to bring up the editor list. The list appears empty because all of the columns are set to zero size.
******
org.eclipse.swt.widgets.ScrollBar.manageChildren(),True
org.eclipse.swt.widgets.Scrollable.setScrollBarVisible(ScrollBar, boolean),True
org.eclipse.swt.widgets.Table.WM_SIZE(int, int),True
org.eclipse.swt.widgets.Table.WM_WINDOWPOSCHANGED(int, int),True
#####
SWT
94598
7e57b361df24bb2168b8ea28aac794c842a59325
DBCS3.1:Eclipse hangs when activate IIMF input in search scope of Help OS: &amp;lt;RHEL 4.0&amp;gt; Language: &amp;lt;Traditional Chinese&amp;gt; Build level: &amp;lt;Eclipse SDK 3.1 M6 - I20050506-1600&amp;gt; JDK version: &amp;lt;IBM JDK 1.4.2 SP1a&amp;gt; Test case #: &amp;lt;5.3 Search scope with NLS name(Help)&amp;gt; Summary: DBCS3.1:Eclipse hangs when activate IIMF input in search scope of Help Steps to recreate problem: 1- Install Eclipse SDK and NL pack 2- Click &amp;quot;Help&amp;quot; from menu -&amp;gt; select &amp;quot;Help Content&amp;quot; -&amp;gt; Click &amp;quot;Search Scope&amp;quot;, a Search Scope dialog pop up. 3- Select &amp;quot;Search all topics&amp;quot;, Click &amp;quot;New&amp;quot;, the New Search List dialog pop up. 4- Then try to active IIMF input method by &amp;quot;CTRL+SPACE&amp;quot; key in order to input DBCS characters, but Eclipse hangs. No response from Eclipse. Error: Eclipse hangs and can't switch or change any input method. Expected Result: IIMF input should be working properly for inputing/key in DBCS characters.
DBCS3.1:Eclipse hangs when activate IIMF input in search scope of Help OS: &amp;lt;RHEL 4.0&amp;gt; Language: &amp;lt;Traditional Chinese&amp;gt; Build level: &amp;lt;Eclipse SDK 3.1 M6 - I20050506-1600&amp;gt; JDK version: &amp;lt;IBM JDK 1.4.2 SP1a&amp;gt; Test case #: &amp;lt;5.3 Search scope with NLS name(Help)&amp;gt; Summary: DBCS3.1:Eclipse hangs when activate IIMF input in search scope of Help Steps to recreate problem: 1- Install Eclipse SDK and NL pack 2- Click &amp;quot;Help&amp;quot; from menu -&amp;gt; select &amp;quot;Help Content&amp;quot; -&amp;gt; Click &amp;quot;Search Scope&amp;quot;, a Search Scope dialog pop up. 3- Select &amp;quot;Search all topics&amp;quot;, Click &amp;quot;New&amp;quot;, the New Search List dialog pop up. 4- Then try to active IIMF input method by &amp;quot;CTRL+SPACE&amp;quot; key in order to input DBCS characters, but Eclipse hangs. No response from Eclipse. Error: Eclipse hangs and can't switch or change any input method. Expected Result: IIMF input should be working properly for inputing/key in DBCS characters.
******
org.eclipse.swt.browser.Browser.public Browser(Composite, int),True
org.eclipse.swt.widgets.Composite.createHandle (int, boolean),True
#####
SWT
93724
27237e423c5dbf3d608f1955e4c7412b12299299
Drag-and-drop creates signal names every time Here is an example of some code in DragSource.java for GTK+: byte[] buffer = Converter.wcsToMbcs(null, &amp;quot;drag_data_get&amp;quot;, true); OS.g_signal_connect(control.handle, buffer, DragGetData.getAddress(), 0); buffer = Converter.wcsToMbcs(null, &amp;quot;drag_end&amp;quot;, true); OS.g_signal_connect(control.handle, buffer, DragEnd.getAddress(), 0); buffer = Converter.wcsToMbcs(null, &amp;quot;drag_data_delete&amp;quot;, true); OS.g_signal_connect(control.handle, buffer, DragDataDelete.getAddress(), 0); Rather than converting the names for the signals every time, these signal names should be defined in OS.java so that they can be only created once.
Drag-and-drop creates signal names every time Here is an example of some code in DragSource.java for GTK+: Rather than converting the names for the signals every time, these signal names should be defined in OS.java so that they can be only created once.
******
org.eclipse.swt.dnd.DragSource.DragSource(Control, int),True
org.eclipse.swt.dnd.DropTarget.DropTarget(Control, int), True
#####
SWT
97651
62bfd83b9f7c798916f986e294f941ecd8738afe;785119c366dfc73b5ee859a6c109dd355f874175
tree insert mark cheese 3.1RC1 - run the snippet below - the insert line is set to be under the &amp;quot;root&amp;quot; item - collapse the root item -&amp;gt; problem 1: this makes most of the insert line go away, except for its pointy ends. This line should not go away because it belongs to the &amp;quot;root&amp;quot; item, not to the &amp;quot;child&amp;quot; item, but if it really wants to go away, then its end tips should not be left - press the button to the right of the Table: this does a Tree.redraw(), and note that the insert line reappears, so I guess it never really meant to go away -&amp;gt; problem 2: now expand the root item again and its insert mark gets copied to below the child item in addition to its initial location. This is cheese, as can be seen by damaging part of this line with another window public static void main(String[] args) { final Display display = new Display(); final Shell shell = new Shell(display); shell.setBounds(10, 10, 300, 300); final Tree tree = new Tree(shell, SWT.NONE); tree.setBounds(10, 10, 200, 200); new TreeItem(tree, SWT.NONE).setText(&amp;quot;pre-root&amp;quot;); TreeItem root1 = new TreeItem(tree, SWT.NONE); root1.setText(&amp;quot;root&amp;quot;); TreeItem child = new TreeItem(root1, SWT.NONE); child.setText(&amp;quot;child&amp;quot;); Button button = new Button(shell, SWT.PUSH); button.setBounds(230,10,30,30); button.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { tree.redraw(); } }); root1.setExpanded(true); tree.setInsertMark(root1, false); shell.open(); while (!shell.isDisposed()) { if (!display.readAndDispatch()) display.sleep(); } display.dispose(); }
tree insert mark cheese 3.1RC1 - run the snippet below - the insert line is set to be under the &amp;quot;root&amp;quot; item - collapse the root item -&amp;gt; problem 1: this makes most of the insert line go away, except for its pointy ends. This line should not go away because it belongs to the &amp;quot;root&amp;quot; item, not to the &amp;quot;child&amp;quot; item, but if it really wants to go away, then its end tips should not be left - press the button to the right of the: this does a, and note that the insert line reappears, so I guess it never really meant to go away -&amp;gt; problem 2: now expand the root item again and its insert mark gets copied to below the child item in addition to its initial location. This is cheese, as can be seen by damaging part of this line with another window
******
org.eclipse.swt.dnd.TreeDragUnderEffect.show(int, int, int),True
org.eclipse.swt.widgets.Tree.register(),True
org.eclipse.swt.widgets.Tree.removeAll(),True
org.eclipse.swt.widgets.Tree.setInsertMark (TreeItem, boolean),True
org.eclipse.swt.widgets.Tree.wmNotifyChild (int, int),True
#####
SWT
97678
1620c1099f04405e420b97cb35b4201aed6a11c9;1ab8b5fbc680e1f1510908f5f82adf75422a18ac
SashForm - can lose sash for item on far right Eclipse 3.1 RC1 In the CustomControlExample, drag the sash between the items on the far right as far right as it will go. It should stop about 20 pixels from the end. However, it lets you drag the sash right off the end and then you can no longer drag the sash back.
SashForm - can lose sash for item on far right Eclipse 3.1 RC1 In the CustomControlExample, drag the sash between the items on the far right as far right as it will go. It should stop about 20 pixels from the end. However, it lets you drag the sash right off the end and then you can no longer drag the sash back.
******
org.eclipse.swt.custom.SashForm.onDragSash(Event),True
#####
SWT
97745
9d320f07641e79ba34cdf0cdd0acffd839827252;20dfe0906435530210e6d0e7cc5a211635ecb300
Table column header stays pressed if mouse button released elsewhere 3.1 RC1, Windows XP - open the tasks view - click on the &amp;quot;Resource&amp;quot; Column and release to sort the table. Note that the column header is inset while pressing down and then restores to normal look on release. - now press down on the &amp;quot;Location&amp;quot; column but drag the mouse off the view before releasing the mouse button. Problem: The &amp;quot;Location&amp;quot; column keeps its &amp;quot;depressed&amp;quot; look until another column is clicked. This can mislead one into thinking the table is sorted by the wrong column. Not sure if this is SWT or JFace...
column header stays pressed if mouse button released elsewhere 3.1 RC1, Windows XP - open the tasks view - click on the &amp;quot;Resource&amp;quot; Column and release to sort the table. Note that the column header is inset while pressing down and then restores to normal look on release. - now press down on the &amp;quot;Location&amp;quot; column but drag the mouse off the view before releasing the mouse button. Problem: The &amp;quot;Location&amp;quot; column keeps its &amp;quot;depressed&amp;quot; look until another column is clicked. This can mislead one into thinking the table is sorted by the wrong column. Not sure if this is SWT or JFace...
******
org.eclipse.swt.widgets.Table.createHandle(),True
org.eclipse.swt.widgets.Table.destroyItem(TableColumn),True
org.eclipse.swt.widgets.Table.WM_NOTIFY(int, int),True
org.eclipse.swt.widgets.TableColumn.setMoveable(boolean),True
#####
SWT
97177
26ad69c094092da4d358b4d2d8e9b641c986827e;330b80f886db8e05a5f99e5db22244e68c8b0111
[misc] Chinese IME status lost Open chinese IME in eclipse text editor,then switch to another window and switch back to Eclipse, chinese IME are closed, and have to open again.
[misc] Chinese IME status lost Open chinese IME in eclipse text editor,then switch to another window and switch back to Eclipse, chinese IME are closed, and have to open again.
******
org.eclipse.swt.widgets.Shell.WM_ACTIVATE(int, int),True
#####
SWT
99376
8da795fc775959f9e1b6809f80f242f6459cea83
TableColumn has width=0 and second column missing 31RC2 - Window -&amp;gt; Show View -&amp;gt; Other... - select PDE Runtime - Plug-in Registry, OK - in the opened view, the Table that's to the right of the Tree has two problems: -&amp;gt; column 0 has width 0 (its width can be increased by dragging its separator) -&amp;gt; column 1 seems non-existent
has width=0 and second column missing 31RC2 - Window -&amp;gt; Show View -&amp;gt; Other... - select PDE Runtime - Plug-in Registry, OK - in the opened view, the that's to the right of the Tree has two problems: -&amp;gt; column 0 has width 0 (its width can be increased by dragging its separator) -&amp;gt; column 1 seems non-existent
******
org.eclipse.swt.custom.SashFormLayout.layout(Composite, boolean),True
#####
SWT
100040
0be85fb152998df6206f109dfea816fb7584e122
Slowdown between 3.1 RC1 and N20050602 due to change to ImageList build N20050602 Several of the UI performance tests got slower between RC1 and N20050602, on Windows. I tried running one of them, the OpenCloseWindowTest on N20050602, and also with N20050602+RC1's SWT. Here are the numbers (on Win2K): N20050602: testOpenCloseWindows:org.eclipse.debug.ui.DebugPerspective Elapsed Process: 844 ms Elapsed Process: 828 ms Elapsed Process: 854 ms average: 842 N20050602 with SWT from RC1 (I20050527-1300): testOpenCloseWindows:org.eclipse.debug.ui.DebugPerspective Elapsed Process: 751 ms Elapsed Process: 757 ms Elapsed Process: 731 ms average: 746ms increase: 96 over 746 = 13% slower I've only included the times for the debug perspective. The other perspectives showed less of a change, and seemed to correlate with the numer of icons (either in the menus or toolbars or both). The debug perspective has the most icons. I'm suspicious of the ImageList change to always specify OS.ILC_MIRROR. I'll see if unwinding that single change makes a difference.
Slowdown between 3.1 RC1 and N20050602 due to change to build N20050602 Several of the UI performance tests got slower between RC1 and N20050602, on Windows. I tried running one of them, the OpenCloseWindowTest on N20050602, and also with N20050602+RC1's SWT. Here are the numbers (on Win2K): N20050602: Elapsed Process: 844 ms Elapsed Process: 828 ms Elapsed Process: 854 ms average: 842 N20050602 with SWT from RC1 (I20050527-1300): Elapsed Process: 751 ms Elapsed Process: 757 ms Elapsed Process: 731 ms average: 746ms increase: 96 over 746 = 13% slower I've only included the times for the debug perspective. The other perspectives showed less of a change, and seemed to correlate with the numer of icons (either in the menus or toolbars or both). The debug perspective has the most icons. I'm suspicious of the change to always specify I'll see if unwinding that single change makes a difference.
******
org.eclipse.swt.widgets.Button._setImage(Image),True
org.eclipse.swt.widgets.Display.getImageList(int, int),True
org.eclipse.swt.widgets.Display.getImageListToolBar(int, int),True
org.eclipse.swt.widgets.Display.getImageListToolBarDisabled(int, int),True
org.eclipse.swt.widgets.Display.getImageListToolBarHot(int, int),True
org.eclipse.swt.widgets.ImageList.ImageList(),True
org.eclipse.swt.widgets.Menu.imageIndex(Image),True
org.eclipse.swt.widgets.TabFolder.imageIndex(Image),True
org.eclipse.swt.widgets.Table.imageIndex(Image),True
org.eclipse.swt.widgets.Table.setCheckboxImageList(int, int),True
org.eclipse.swt.widgets.ToolItem.updateImages(boolean),True
org.eclipse.swt.widgets.Tree.imageIndex(Image),True
org.eclipse.swt.widgets.Tree.setCheckboxImageList(),True
#####
SWT
78634
5c18af56c06eac42b5c0bdd457840f7f5340884f
ImageData.getTransparencyMask - incorrect javadoc or implementation wrong The implementation of getTransparencyMask appears to return a fully opaque mask when the image has no transparency. The javadoc seems to infer that it would return null in that case. /** * Returns an &amp;lt;code&amp;gt;ImageData&amp;lt;/code&amp;gt; which specifies the * transparency mask information for the receiver, or null if the * receiver has no transparency and is not an icon. * * &amp;#64;return the transparency mask or null if none exists */ public ImageData getTransparencyMask() (see implementation of ImageData.colorMask) On a different note, should we return a transparent mask based on the the alphaData values with the 127 threshold?
 - incorrect javadoc or implementation wrong The implementation of  appears to return a fully opaque mask when the image has no transparency. The javadoc seems to infer that it would return null in that case. /** * Returns an &amp;lt;code&amp;gt;ImageData&amp;lt;/code&amp;gt; which specifies the * transparency mask information for the receiver, or null if the * receiver has no transparency and is not an icon. * * &amp;#64;return the transparency mask or null if none exists */ (see implementation of ) On a different note, should we return a transparent mask based on the the values with the 127 threshold?
******
org.eclipse.swt.graphics.ImageData.getTransparencyMask(),False,changes_comments
#####
SWT
94603
ecd1439b859941293b6ce2277d9cfbd049a2cdb6;4554e604711848107217e581c2ea19dd3a200ccc;afa1f360d20e2a4c5363a65a8a165903a6314c9f
Spinner does not look like Windows standard one SWT Spinner puts buttons outside of the text box inset border. Standard look of Windows UpDown control is different. The buttons are inside the inset border.
does not look like Windows standard one SWT puts buttons outside of the text box inset border. Standard look of Windows control is different. The buttons are inside the inset border.
******
org.eclipse.swt.widgets.Spinner.computeSize(int, int, boolean),True
org.eclipse.swt.widgets.Spinner.createHandle(),True
org.eclipse.swt.widgets.Spinner.WM_SIZE(int, int),True
#####
SWT
96916
50dcb2900938416c32d28eaa27bf94229993f752
Spinner.setToolTipText() doesn't work No tooltip appears on the spinner widget after Spinner.setToolTipText().
doesn't work No tooltip appears on the spinner widget after .
******
org.eclipse.swt.widgets.Control.releaseWidget(),True
org.eclipse.swt.widgets.Control.setToolTipText(String),True
org.eclipse.swt.widgets.Shell.fixShell(Shell, Control),True
#####
SWT
102794
cb48ee3dfb90e4b0bbbaf2bb0eecef2cccfd1280
GridLayout has change behaviour between 3.0.2 and 3.1 Running the following problem on 3.0.2 and 3.1 shows a difference in behaviour: public static void main(String[] args) { Display display = new Display(); Shell shell = new Shell(display); shell.setLayout(new FillLayout()); ScrolledComposite sc1 = new ScrolledComposite(shell, SWT.H_SCROLL | SWT.V_SCROLL); Composite editor = new Composite(sc1, SWT.SHADOW_NONE); sc1.setContent(editor); sc1.setLayout(new FillLayout()); GridLayout layout = new GridLayout(); layout.numColumns = 6; layout.makeColumnsEqualWidth = true; editor.setLayout(layout); Label boxLabel = new Label(editor, SWT.NONE); boxLabel.setText(&amp;quot;My label&amp;quot;); Text textBox = new Text(editor, SWT.H_SCROLL | SWT.V_SCROLL | SWT.MULTI | SWT.BORDER); textBox.setText(&amp;quot;Some text for the text box\nAlso with a new line&amp;quot;); // do layout bits GridData labelData = new GridData(SWT.RIGHT, SWT.TOP, false, false); boxLabel.setLayoutData(labelData); GridData textBoxData = new GridData(SWT.FILL, SWT.CENTER, true, false, 5, 1); textBoxData.widthHint = 400; textBox.setLayoutData(textBoxData); sc1.setExpandHorizontal(true); sc1.setExpandVertical(true); sc1.setMinSize(editor.computeSize(SWT.DEFAULT, SWT.DEFAULT)); shell.pack(); shell.open(); while (!shell.isDisposed()) { if (!display.readAndDispatch()) display.sleep(); } display.dispose(); } Basically on 3.0.2 the window that appears has a label of about 80 pixels wide and a textbox of 400 pixels wide. With 3.1 the label is about 400 pixels wide, with the text box being about 2000 pixels wide. This appears to be a combination of the text box spanning 5 columns and the use of layout.makeColumnsEqualWidth = true; Turning off makeColumnsEqualWidth helps but it means that the real app this if from ends up looking untidy. Using minimumWidth instead of widthHint doesn't help. Commenting out the minimumWidth line helps, but the form ends up being wider than I'd like. The effect I'm trying to achieve is that labels are 1 column wide then text boxes are either 2 or 5 columns wide (so some rows get two labels and text boxes) The scrolled composite is needed because in the real app the forms are actually within a TabItem, so I need the ability to scroll.
has change behaviour between 3.0.2 and 3.1 Running the following problem on 3.0.2 and 3.1 shows a difference in behaviour: Basically on 3.0.2 the window that appears has a label of about 80 pixels wide and a textbox of 400 pixels wide. With 3.1 the label is about 400 pixels wide, with the text box being about 2000 pixels wide. This appears to be a combination of the text box spanning 5 columns and the use of Turning off helps but it means that the real app this if from ends up looking untidy. Using instead of doesn't help. Commenting out the line helps, but the form ends up being wider than I'd like. The effect I'm trying to achieve is that labels are 1 column wide then text boxes are either 2 or 5 columns wide (so some rows get two labels and text boxes) The scrolled composite is needed because in the real app the forms are actually within a, so I need the ability to scroll.
******
org.eclipse.swt.layout.GridLayout.layout(Composite, boolean, int, int, int, int, boolean),True
#####
SWT
100387
7cdc97fb7d0af6614dc99064f39072da2ef631af
CTabFolder creates and disposes a Shell on every MouseHover CTabFolder.showToolTip() currently does the following: On MouseHover: - create a temporary shell - if there's a tooltip: set it and show it - otherwise: dispose the shell There are no tooltips for the tabs used for views in Eclipse. As you hover over each tab, a new Shell is created and disposed on each MouseHover event.
creates and disposes a Shell on every currently does the following: On : - create a temporary shell - if there's a tooltip: set it and show it - otherwise: dispose the shell There are no tooltips for the tabs used for views in Eclipse. As you hover over each tab, a new Shell is created and disposed on each  event.
******
org.eclipse.swt.custom.CTabFolder.showToolTip(int, int),True
#####
SWT
104966
9fa5fc1bc49fd827821b4fd087f2e3db8ee6639a
Link displays as enabled when setText called after setEnabled VE 1.1 Running with XP manifest 1. Create a new Visual bean (SWT) 2. Drop a link on the composite 3. Set the enabled property on the link to be disabled 4. Note: the link is now disabled in the preview 5. Close the editor 6. Re-open the editor 7. Observe: link now shows as enabled When you run the application the link shows as enabled, but is actually disabled. If you change the order of the initialization such that the enabled status is set after the text is set it displays correctly. This could be an SWT bug.
displays as enabled when called after VE 1.1 Running with XP manifest 1. Create a new (SWT) 2. Drop a link on the composite 3. Set the enabled property on the link to be disabled 4. Note: the link is now disabled in the preview 5. Close the editor 6. Re-open the editor 7. Observe: link now shows as enabled When you run the application the link shows as enabled, but is actually disabled. If you change the order of the initialization such that the enabled status is set after the text is set it displays correctly. This could be an SWT bug.
******
org.eclipse.swt.widgets.Link.setText(String),True
#####
SWT
90258
c6ce818f8e4807818aaed4c8009b0378465a5c15
Table item not updated when item count == 1 I20050401 (M6) I am using a Table with SWT.VIRTUAL. Everything works fine, except for the case I set the item count to 1, in which case I do not receive an SWT.SetData notification. Tried to reproduce using a modified version of Snippet151, but everything works as expected there. Do you have any idea what could be going wrong? One funny thing is that in the variable view, the debugger displays the updated contents of table.items[0] after calling clearAll(), but I have verified that the data is never ever set. The display fails to update. My code looks like this: ---------------- Table table... table.setItemCount(1); table.clearAll(); ... private void handleSetData(Event event) { TableItem item= (TableItem) event.item; int index= fProposalTable.indexOf(item); ICompletionProposal current= fFilteredProposals[index]; item.setText(current.getDisplayString()); item.setImage(current.getImage()); item.setData(current); } -----------------
item not updated when item count == 1 I20050401 (M6) I am using a with . Everything works fine, except for the case I set the item count to 1, in which case I do not receive an notification. Tried to reproduce using a modified version of Snippet151, but everything works as expected there. Do you have any idea what could be going wrong? One funny thing is that in the variable view, the debugger displays the updated contents of after calling , but I have verified that the data is never ever set. The display fails to update. My code looks like this: ----------------  -----------------
******
org.eclipse.swt.widgets.Table.destroyItem(TableItem),True
org.eclipse.swt.widgets.Table.pixbufCellDataProc(int, int, int),True
org.eclipse.swt.widgets.Table.setCellData(int, int),True
org.eclipse.swt.widgets.Table.textCellDataProc(int, int, int),True
#####
SWT
107145
cccbf7cc39678ca0d272b14dcb7a6b7155f390e1
Javadoc can not refer to package protected methods In the javadoc for Widget.destroyWidget, we refer to package protected methods. These must be removed. We can just put them in the comments or remove them entirely. The following build errors are caused by this problem: /builds/I200508161235/src/plugins/org.eclipse.platform.doc.isv/../org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Widget.java:333: warning - Tag &amp;#64;see: can't find releaseChild in org.eclipse.swt.widgets.Widget /builds/I200508161235/src/plugins/org.eclipse.platform.doc.isv/../org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Widget.java:333: warning - Tag &amp;#64;see: can't find releaseWidget in org.eclipse.swt.widgets.Widget /builds/I200508161235/src/plugins/org.eclipse.platform.doc.isv/../org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Widget.java:333: warning - Tag &amp;#64;see: can't find releaseHandle in org.eclipse.swt.widgets.Widget
Javadoc can not refer to package protected methods In the javadoc for, we refer to package protected methods. These must be removed. We can just put them in the comments or remove them entirely. The following build errors are caused by this problem:  warning - Tag &amp;#64;see: can't find  in  warning - Tag &amp;#64;see: can't find  in  warning - Tag &amp;#64;see: can't find  in 
******
org.eclipse.swt.widgets.Widget.destroyWidget(),False,changed_comments
#####
SWT
92013
f2eaf4de8227661ef29880af04d52e370a50fc82
DCR - Need SWT.VERTICAL style for CoolBarThere seems to be no way to tell CoolBar to orient itself vertically i.e. the drag handle is always rendered as a vertical line/vertical dots. I wanted to use CoolBar/CoolItem for the intro launch bar so that I can get the OS-specific handle rendering but I need to be able to position CoolBar vertically when in the LEFT and RIGHT window trim areas. In this orientation, CoolItem handle will be rendered horizontally (as horizontal line/dots).
DCR - Need  style for  seems to be no way to tell  to orient itself vertically i.e. the drag handle is always rendered as a vertical line/vertical dots. I wanted to use / for the intro launch bar so that I can get the OS-specific handle rendering but I need to be able to position  vertically when in the LEFT and RIGHT window trim areas. In this orientation,  handle will be rendered horizontally (as horizontal line/dots).
******
org.eclipse.swt.widgets.CoolBar.checkStyle(int),True
org.eclipse.swt.widgets.CoolBar.computeSize(int, int, boolean),True
org.eclipse.swt.widgets.CoolBar.getMargin(int),True
org.eclipse.swt.widgets.CoolBar.findThemeControl(),True
org.eclipse.swt.widgets.CoolBar.getItemSizes(),True
org.eclipse.swt.widgets.CoolBar.widgetStyle(),True
org.eclipse.swt.widgets.CoolBar.wmNotifyChild(int, int),True
org.eclipse.swt.widgets.CoolItem.computeSize(int, int),True
org.eclipse.swt.widgets.CoolItem.getBounds(),True
org.eclipse.swt.widgets.CoolItem.getPreferredSize(),True
org.eclipse.swt.widgets.CoolItem.setPreferredSize(int, int),True
org.eclipse.swt.widgets.CoolItem.getSize(),True
org.eclipse.swt.widgets.CoolItem.setSize(int, int),True
org.eclipse.swt.widgets.CoolItem.getMinimumSize(),True
org.eclipse.swt.widgets.CoolItem.setMinimumSize(int, int),True
#####
SWT
96053
afa1f360d20e2a4c5363a65a8a165903a6314c9f
Spinner: Pressing buttons should focus spinner and select text SWT-win32, v3135 (3.1M7) The standard behaviour for Windows spinner widgets is to set focus to the text control and select its text when the user clicks on the up or down button. Right now, this does not happen. Note that you get this for free if you implement the suggestion in &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=94603#c3" title="RESOLVED FIXED - Spinner does not look like Windows standard one"&gt;bug 94603 comment #3&lt;/a&gt;&lt;/span&gt;.
: Pressing buttons should focus spinner and select text SWT-win32, v3135 (3.1M7) The standard behaviour for Windows spinner widgets is to set focus to the text control and select its text when the user clicks on the up or down button. Right now, this does not happen. Note that you get this for free if you implement the suggestion in - does not look like Windows standard one"&gt;bug 94603 comment #3&lt;/a&gt;&lt;/span&gt;.
******
org.eclipse.swt.widgets.Spinner.createHandle(),True
org.eclipse.swt.widgets.Spinner.WM_SIZE(int, int),True
#####
SWT
105772
ed8e699d82d44d808052f8c255273ae30e39ece7
Strange background color of label on text search page I20050726-1222 SWT has enabled native support for correct background color of tab bocks. However one label inside the search page has a strange background color now.
Strange background color of label on text search page I20050726-1222 SWT has enabled native support for correct background color of tab bocks. However one label inside the search page has a strange background color now.
******
org.eclipse.swt.custom.CLabel.checkStyle(int),True
org.eclipse.swt.custom.CLabel.onPaint(PaintEvent),True
org.eclipse.swt.custom.CLabel.setBackground (Color),True
#####
SWT
84609
bd05df9dcb7d1652d6e5b72fffe12747a100cab4;8b3cbf3b5eee3deb1dafe90fe80e8c033230f02c
TableColumn has NPE while calling pack() on last column Consider followed code, table has only 3 columns: // refresh table on new data lvtTable.getColumn(0).pack(); lvtTable.getColumn(1).pack(); lvtTable.getColumn(2).pack(); On third call I get caught NPE (in debugger) in TableColumn (line 356), because parent.getColumns() (in TableColumn:354) returns array with 4 elements (always one more as existing in the table), and the last element is always null. My system is WinXP, Eclipse Version: 3.1.0, Build id: I20050202-0800, JDK 1.5.0. 1
has NPE while calling  on last column Consider followed code, table has only 3 columns: // refresh table on new data  On third call I get caught NPE (in debugger) in  (line 356), because  (in :354) returns array with 4 elements (always one more as existing in the table), and the last element is always null. My system is WinXP, Eclipse Version: 3.1.0, Build id: I20050202-0800, JDK 1.5.0. 1
******
org.eclipse.swt.widgets.Table.wmNotifyChild(int, int),True
org.eclipse.swt.widgets.TableColumn.pack(),True
#####
SWT
99266
cebdfa9a8569bc2767c561e70aea7c76607a05d1;ceb37340077a99b8d00fc8adec483526f4f82a83;a45e2f0f4688ba8750d124e41802861dc3176c91;745fed40d72bb63870bb8b88ba2b1d5d72701310;625f15cccaec72a6e7aefaa65580720fa6d4113a;09df239aa9def6a8deeaa31d37a7fd271eebc825;7a1d67f746b314a594406116148490b4cb66e7bd
[Viewers] Bogus empty rows at the beginning of a table RC1: To reproduce this issue run the attached code. The table gets displayed with few blank lines at the top.
[Viewers] Bogus empty rows at the beginning of a table RC1: To reproduce this issue run the attached code. The table gets displayed with few blank lines at the top.
******
org.eclipse.swt.widgets.Table.setBackgroundPixel(int),True
org.eclipse.swt.widgets.Table.WM_SIZE(int, int),True
org.eclipse.swt.widgets.Table.WM_WINDOWPOSCHANGED(int, int),True
org.eclipse.swt.widgets.Table.setBounds(int, int, int, int, int),True
org.eclipse.swt.widgets.Table.createItem(TableColumn, int),True
org.eclipse.swt.widgets.Table.destroyItem(TableColumn),True
org.eclipse.swt.widgets.Table.WM_NOTIFY(int, int),True
org.eclipse.swt.widgets.Table.releaseChildren (boolean),True
org.eclipse.swt.widgets.Table.remove(int []),True
org.eclipse.swt.widgets.Table.remove(int),True
org.eclipse.swt.widgets.Table.remove(int, int),True
org.eclipse.swt.widgets.Table.removeAll(),True
org.eclipse.swt.widgets.Table.setItemCount(int),True
org.eclipse.swt.widgets.Table.setDeferResize(boolean),True
org.eclipse.swt.widgets.TableColumn.pack(),True
#####
SWT
113971
30d64d862c2391ce0e5603549fa1ca6337efe7ff;2cd9c142b2dc2cb5847c910c44c758dfcfaf6ef3;c63ca636edfbea4cd55ccc07da414186be375ce0
Test failures in Tree on N20051027-0010 The &amp;quot;org.eclipse.ui.tests&amp;quot; had test failures on MacOS X last night. The failures were in Tree code. One was a NPE, which I believe has already been fixed. The other is as follows: java.lang.ArrayIndexOutOfBoundsException at java.lang.System.arraycopy(Native Method) at org.eclipse.swt.widgets.Tree.createItem(Tree.java:714) at org.eclipse.swt.widgets.TreeItem.&amp;lt;init&amp;gt;(TreeItem.java:191) at org.eclipse.swt.widgets.TreeItem.&amp;lt;init&amp;gt;(TreeItem.java:148) at org.eclipse.jface.viewers.TreeViewer.newItem(TreeViewer.java:507) at org.eclipse.jface.viewers.AbstractTreeViewer.updatePlus(AbstractTreeViewer.java:1875) at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1235) at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1201) at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1188) at org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.java:1264) at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1201) at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1262) at org.eclipse.jface.tests.viewers.TestModelContentProvider.doStructureChange(TestModelContentProvider.java:78) at org.eclipse.jface.tests.viewers.TestModelContentProvider.testModelChanged(TestModelContentProvider.java:130) at org.eclipse.jface.tests.viewers.TestModel.fireModelChanged(TestModel.java:38) at org.eclipse.jface.tests.viewers.TestElement.addChild(TestElement.java:69) at org.eclipse.jface.tests.viewers.TestElement.addChild(TestElement.java:63) at org.eclipse.jface.tests.viewers.AbstractTreeViewerTest.testRefreshWithAddedChildren(AbstractTreeViewerTest.java:161) at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:330) at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:204) at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:35) at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:31) at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:386) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:165) at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338) at org.eclipse.core.launcher.Main.basicRun(Main.java:282) at org.eclipse.core.launcher.Main.run(Main.java:977) at org.eclipse.core.launcher.Main.main(Main.java:952) 
Test failures in on N20051027-0010 The &amp;quot;&amp;quot; had test failures on MacOS X last night. The failures were in code. One was a NPE, which I believe has already been fixed. The other is as follows: 
******
org.eclipse.swt.widgets.Tree.createItem(TreeItem, TreeItem, int),True
org.eclipse.swt.widgets.Tree._getItem(TreeItem, int),True
org.eclipse.swt.widgets.Tree.releaseItem(TreeItem, boolean),True
org.eclipse.swt.widgets.TreeItem.TreeItem(Tree, TreeItem, int, int, boolean),True
#####
SWT
112358
2503053f30d7051ae67b1f8960c73f8d3decfc0a
Need a way to create a new Color based on an existing color We need a way to create a new color from an existing color by varying the hue, saturation or brightness.
Need a way to create a new based on an existing color We need a way to create a new color from an existing color by varying the hue, saturation or brightness.
******
org.eclipse.swt.graphics.RGB.equals(Object),False,formatting
org.eclipse.swt.graphics.RGB.hashCode(),False,formatting
org.eclipse.swt.graphics.RGB.toString(),False,formatting
#####
SWT
82277
0f87afa00740d11186b3c90abf4e454cd53a16c4
[XP theme] coolbars gradient background a gradient background in coolbars in combination with win xp visula themes will give us an &amp;quot;office 2003 like&amp;quot; toolbar &lt;a href="http://www.eclipse.org/newsportal/article.php?id=16763&amp;amp;group=eclipse.platform.swt"&gt;http://www.eclipse.org/newsportal/article.php?id=16763&amp;amp;group=eclipse.platform.swt&lt;/a&gt;
[XP theme] coolbars gradient background a gradient background in coolbars in combination with win xp visula themes will give us an &amp;quot;office 2003 like&amp;quot; toolbar &lt;a href="http://www.eclipse.org/newsportal/article.php?id=16763&amp;amp;group=eclipse.platform.swt"&gt;http://www.eclipse.org/newsportal/article.php?id=16763&amp;amp;group=eclipse.platform.swt&lt;/a&gt;
******
org.eclipse.swt.widgets.CoolBar.drawThemeBackground(int, int, RECT),True
#####
SWT
92341
7ec2e420459073a76767eaf4412d2bd5b970dc99;43d75b5f85b54d28ea519896d6e52d18e49e215b
DCR - Add SWT.VIRTUAL style to Tree widget Please add a possibility to lazy-load the first tree level (like SWT.VIRTUAL for the table widget).
DCR - Add style to widget Please add a possibility to lazy-load the first tree level (like for the table widget).
******
org.eclipse.swt.widgets.Tree.callWindowProc(int, int, int, int),True
org.eclipse.swt.widgets.Tree.clear(int, boolean),True
org.eclipse.swt.widgets.Tree.clear(TreeItem, int, boolean),True
org.eclipse.swt.widgets.Tree.clearAll(boolean),True
org.eclipse.swt.widgets.Tree.createItem(TreeItem, int, int),True
org.eclipse.swt.widgets.Tree.deselectAll(),True
org.eclipse.swt.widgets.Tree.destroyItem(TreeItem),True
org.eclipse.swt.widgets.Tree.findItem(int),True
org.eclipse.swt.widgets.Tree.getItem(int),True
org.eclipse.swt.widgets.Tree.getItem(Point),True
org.eclipse.swt.widgets.Tree.getItems(int),True
org.eclipse.swt.widgets.Tree.getSelection(),True
org.eclipse.swt.widgets.Tree.getSelectionCount(),True
org.eclipse.swt.widgets.Tree.getTopItem(),True
org.eclipse.swt.widgets.Tree.releaseItem(TreeItem, TVITEM, boolean),True
org.eclipse.swt.widgets.Tree.releaseItems(TreeItem [], TVITEM),True
org.eclipse.swt.widgets.Tree.setInsertMark (TreeItem item, boolean),True
org.eclipse.swt.widgets.Tree.setItemCount(int),True
org.eclipse.swt.widgets.Tree.setItemCount(int count, int hItem, TreeItem),True
org.eclipse.swt.widgets.Tree.selectAll(),True
org.eclipse.swt.widgets.Tree.setSelection(TreeItem[]),True
org.eclipse.swt.widgets.Tree.showSelection(),True
org.eclipse.swt.widgets.Tree.WM_CHAR(int, int),True
org.eclipse.swt.widgets.Tree.WM_KEYDOWN(int, int),True
org.eclipse.swt.widgets.Tree.WM_LBUTTONDBLCLK(int, int),True
org.eclipse.swt.widgets.Tree.WM_LBUTTONDOWN(int, int),True
org.eclipse.swt.widgets.Tree.wmNotifyChild (int, int),True
org.eclipse.swt.widgets.TreeColumn.pack(),True
org.eclipse.swt.widgets.TreeItem.TreeItem(Tree, int),True
org.eclipse.swt.widgets.TreeItem.TreeItem(Tree, int, int),True
org.eclipse.swt.widgets.TreeItem.checkNull(TreeItem),True
org.eclipse.swt.widgets.TreeItem.clear(),True
org.eclipse.swt.widgets.TreeItem.clear(int, boolean),True
org.eclipse.swt.widgets.TreeItem.clearAll(boolean),True
org.eclipse.swt.widgets.TreeItem.destroyWidget(),True
org.eclipse.swt.widgets.TreeItem.getItem(int),True
org.eclipse.swt.widgets.TreeItem.getParentItem(),True
org.eclipse.swt.widgets.TreeItem.releaseChildren(boolean),True
org.eclipse.swt.widgets.TreeItem.removeAll(),True
org.eclipse.swt.widgets.TreeItem.setExpanded(boolean),True
org.eclipse.swt.widgets.TreeItem.org.eclipse.swt.widgets.TreeItem.setFont(Font),True
org.eclipse.swt.widgets.TreeItem.setFont(int, Font),True
org.eclipse.swt.widgets.TreeItem.setImage(int, Image),True
org.eclipse.swt.widgets.TreeItem.setText(String []),True
org.eclipse.swt.widgets.TreeItem.setText(int, String),True
#####
SWT
117574
6050683e0a29a2ce91eeb18855edde35d92968d3
RIGHT_TO_LEFT | DOUBLE_BUFFERED don't get along build I20051122-0800 When SWT.RIGHT_TO_LEFT | SWT.DOUBLE_BUFFERED are used the gc clipping is Rect(0,0,0,0) during paint. Example: public static void main(String[] args) { Display display = new Display(); Shell shell = new Shell(display, SWT.SHELL_TRIM | SWT.RIGHT_TO_LEFT | SWT.DOUBLE_BUFFERED); shell.addListener(SWT.Paint, new Listener() { public void handleEvent(Event event) { System.out.println(event.gc.getClipping()); event.gc.drawString(&amp;quot;This is broken &amp;quot; + event.gc.getClipping(), 10, 10); } }); shell.open(); while (!shell.isDisposed()) { if (!display.readAndDispatch()) display.sleep(); } display.dispose (); } Doesn't draw anything. Note: my machine is a win xp bidi enabled.
don't get along build I20051122-0800 When are used the gc clipping is  during paint. Example: Doesn't draw anything. Note: my machine is a win xp bidi enabled.
******
org.eclipse.swt.widgets.Composite.WM_PAINT(int, int),True
#####
SWT
93380
32dee67340c78bb56a81cc5712fbee188555b83d
[DnD] 100% CPU usage when dragging files in the navigator or package explorer Version: 3.1.0 Build id: I20050419-1200 When i drag and drop a file inside the package explorer or navigator views the CPU says at 100% (or 50% when hyperthreading is enabled). Since the CPU usage doesn't go above 50% my guess is that all of the processing time is spent in the event thread (windows doesn't seem to let the virtual CPU on the event thread, hence the 50% number). I do not see this massive use of CPU when dragging an external file into the navigator or when dragging a file out of the navigator. Dragging views/editor is also ok. I will try to get some thread dumps either tonight or tomorrow.
[DnD] 100% CPU usage when dragging files in the navigator or package explorer Version: 3.1.0 Build id: I20050419-1200 When i drag and drop a file inside the package explorer or navigator views the CPU says at 100% (or 50% when hyperthreading is enabled). Since the CPU usage doesn't go above 50% my guess is that all of the processing time is spent in the event thread (windows doesn't seem to let the virtual CPU on the event thread, hence the 50% number). I do not see this massive use of CPU when dragging an external file into the navigator or when dragging a file out of the navigator. Dragging views/editor is also ok. I will try to get some thread dumps either tonight or tomorrow.
******
org.eclipse.swt.dnd.DragSource.drag(),True
#####
SWT
103976
76867498f9fb44198c4df2f0d2534a34f0b82ca1
Spinner widget should provide setValues() method like Slider Especially since Spinner is so picky about the order you set the values when you set them individually, it's a pain to get right. It'd be really nice to have this method: setValues(int selection, int minimum, int maximum, int digits, int increment, int pageIncrement)
widget should provide method like Especially since is so picky about the order you set the values when you set them individually, it's a pain to get right. It'd be really nice to have this method: 
******
#####
SWT
106289
da6c5fc7011fae57c72201a3fd2c3d5d779cf755;d2cc3b36961e1b577bb29d7169b1b241e35d3b1a
Blurry Tree text in second column When running the sample Tree-with-columns snippet (Snippet170) I'm getting 'blurry' text in columns 2 and 3 after selecting an item. It's like the antialiasing has been applied many times.
Blurry text in second column When running the sample -with-columns snippet (Snippet170) I'm getting 'blurry' text in columns 2 and 3 after selecting an item. It's like the antialiasing has been applied many times.
******
org.eclipse.swt.widgets.Tree.wmNotifyChild(int, int),True
#####
SWT
104150
ef3348b27f4d541d10ee19a34027d5fffff6ba48;8094c5620da45f5980d8d011643b26514020dd87
[Patch] Table cursor separated from table selection when clicking on grid lines or empty space SWT-win32, v3138 (3.1-final) When using a table cursor, there are two kinds of table regions that have the potential to separate the table cursor from the table selection when clicked on: 1) grid lines (table.getLinesVisible() == true) 2) empty space to the left of the first cell of each row (SWT.FULL_SELECTION) Expected behaviour: No matter which part of the table the user clicks on, the table cursor should follow the table selection as closely as possible if the selection is changed as a result of the click. To reproduce the problem, use snippet 96 with an added table.setLinesVisible(true).
[Patch] cursor separated from table selection when clicking on grid lines or empty space SWT-win32, v3138 (3.1-final) When using a table cursor, there are two kinds of table regions that have the potential to separate the table cursor from the table selection when clicked on: 1) grid lines ( 2) empty space to the left of the first cell of each row () Expected behaviour: No matter which part of the table the user clicks on, the table cursor should follow the table selection as closely as possible if the selection is changed as a result of the click. To reproduce the problem, use snippet 96 with an added .
******
org.eclipse.swt.custom.TableCursor.tableMouseDown(Event),True
#####
SWT
81264
750fbf7ef7f008b0864e26e584fad6255dbe4f53
Table fails to setTopIndex after new items are added to the table I am working on a table viewer that keeps track of the scroll bar and loads content into the table dynamically as the user scrolls to the end of the table. Items could be added/removed from the table as the user scrolls. To maintain the position of the table, I call setTopIndex at the end of the update. I have created a small testcase to simulate the process. Here's my testcase to demonstrate the problem: public static void main(String[] args) { final Display display = new Display(); Shell shell = new Shell(display); shell.setBounds(10,10,200,200); final Table table = new Table(shell, SWT.NONE); table.setBounds(10,10,100,100); for (int i = 0; i &amp;lt; 99; i++) { new TableItem(table, SWT.NONE).setText(&amp;quot;item &amp;quot; + i); } table.setTopIndex(20); shell.open(); System.out.println(&amp;quot;top visible index: &amp;quot; + table.getTopIndex()); for (int i = 0; i &amp;lt; 5; i++) { new TableItem(table, SWT.NONE).setText(&amp;quot;item &amp;quot; + i); } table.setTopIndex(40); System.out.println(&amp;quot;top visible index: &amp;quot; + table.getTopIndex()); while (!shell.isDisposed()) { if (!display.readAndDispatch()) display.sleep(); } display.dispose(); } Table.setTopIndex fails to position to the correct table item if new items are added to the table after the shell is opened. The first call to setTopIndex succeeds. The table is correctly positioned at item 20. After adding new table items to the table, calling setTopTable(40) has no effect. Calling getTopIndex continues to return 20. Expected Result: Calling setTopIndex(40) should move table item #40 to the top of the table. Calling getTopIndex after should return 40. If the last 5 items are added before the shell is opened, setTopIndex to 40 will also succeed. The testcase works as expected on Windows.
fails to after new items are added to the table I am working on a table viewer that keeps track of the scroll bar and loads content into the table dynamically as the user scrolls to the end of the table. Items could be added/removed from the table as the user scrolls. To maintain the position of the table, I call at the end of the update. I have created a small testcase to simulate the process. Here's my testcase to demonstrate the problem: fails to position to the correct table item if new items are added to the table after the shell is opened. The first call to succeeds. The table is correctly positioned at item 20. After adding new table items to the table, calling has no effect. Calling continues to return 20. Expected Result: Calling should move table item #40 to the top of the table. Calling after should return 40. If the last 5 items are added before the shell is opened, to 40 will also succeed. The testcase works as expected on Windows.
******
org.eclipse.swt.widgets.List.setTopIndex(int),True
org.eclipse.swt.widgets.List.showSelection(),True
org.eclipse.swt.widgets.Table.setTopIndex(int),True
org.eclipse.swt.widgets.Table.showItem(int),True
org.eclipse.swt.widgets.Tree.setTopItem(TreeItem),True
org.eclipse.swt.widgets.Tree.showItem (int,boolean),True
#####
SWT
99145
ed276658e2fcf0ec8b403e420899063844791f4a;9f3f955d035544879b4768b5dbcbfc67ba4dd5b1
Link widget only disables link, not text 20050609-0010 When disabling a a linked wiget with mixed text/link content (e.g. &amp;quot;Use the &amp;lt;a&amp;gt;XY page&amp;lt;/a&amp;gt; to configure this&amp;quot;), only the link is disabled, not the text. See screenshot
widget only disables link, not text 20050609-0010 When disabling a a linked wiget with mixed text/link content (e.g. &amp;quot;Use the &amp;lt;a&amp;gt;XY page&amp;lt;/a&amp;gt; to configure this&amp;quot;), only the link is disabled, not the text. See screenshot
******
org.eclipse.swt.widgets.Link.createHandle(),True
org.eclipse.swt.widgets.Link.drawWidget(GC, RECT),True
org.eclipse.swt.widgets.Link.releaseWidget(),True
org.eclipse.swt.widgets.Link.setText(String),True
org.eclipse.swt.widgets.Link.wmColorChild(int,int),True
#####
SWT
101354
f851a1491c86eded57ab0a079e1b0ff7a2a08f60
Class ImageDataLoader needs javadoc See &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=68867" title="RESOLVED FIXED - ImageData - remove ImageLoader dependencies"&gt;bug 68867&lt;/a&gt;&lt;/span&gt; for details.
Class needs javadoc See &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=68867" title="RESOLVED FIXED - - remove dependencies"&gt;bug 68867&lt;/a&gt;&lt;/span&gt; for details.
******
#####
SWT
108769
4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25
swt.FileDialog: additional clarification in javadoc and convenience method I was recently working out an issue with some code using the SWT FileDialog class. The soon-to-be-attached patch adds some additional information to the javadoc which explains some details I gleaned from reading the source but wasn't quite clear from the existing javadocs. The patch also adds a new method for setting the filter names and extensions which I believe is more convenient to use. I created the patch against the GTK version of SWT. It will need to be adapted for the other versions. (note: by &amp;quot;adapt&amp;quot; I merely mean that the line numbers need to be adjusted, none of the code is platform-specific)
additional clarification in javadoc and convenience method I was recently working out an issue with some code using the class. The soon-to-be-attached patch adds some additional information to the javadoc which explains some details I gleaned from reading the source but wasn't quite clear from the existing javadocs. The patch also adds a new method for setting the filter names and extensions which I believe is more convenient to use. I created the patch against the GTK version of SWT. It will need to be adapted for the other versions. (note: by &amp;quot;adapt&amp;quot; I merely mean that the line numbers need to be adjusted, none of the code is platform-specific)
******
org.eclipse.swt.widgets.FileDialog,True
#####
SWT
85072
4a11c79c4bdca91cc6ae7f5655fd3265d46274e3;a316369313bfe41430a1345c808b4d72f47b8de7;c2deeb4450cf9e760ad5d114d9513f6491d23aa4
Eclipse working set aggressively trimmed by Windows [This problem affects all NT-based Windows variants, including Win2k and XP] The Windows NT kernel has a well-known problem: When you minimize an application, Windows will trim the working set of the process. This is described in the following Microsoft knowledgebase entry, which also provides a solution: &lt;a href="http://support.microsoft.com/default.aspx?scid=kb;en-us;293215"&gt;http://support.microsoft.com/default.aspx?scid=kb;en-us;293215&lt;/a&gt; Certain applications seem particularly affected by this problem -- Java GUI applications and the Mozilla suite seem particularly sensitive. (Mozilla-based apps include a hidden configuration option to enable the solution mentioned above.) When you bring back the minimized application, the OS will start swapping the pages back into physical memory, &amp;quot;trashing&amp;quot; the disk and meanwhile making the application completely unresponsive. Waits up to a minute have been observed with large (300-350MB) working sets. The aforementioned solution prevents the OS from immediately swapping out the application, but will still swap out the application to give priority to other focused applications, so the fix has no significant negative effects on a running system. A patch was offered on the SWT dev mailing list some time ago, but it does not seem to have been recorded or accepted: &lt;a href="http://dev.eclipse.org/mhonarc/lists/platform-swt-dev/msg03710.html"&gt;http://dev.eclipse.org/mhonarc/lists/platform-swt-dev/msg03710.html&lt;/a&gt; Further references: &lt;a href="http://www.javagaming.org/cgi-bin/JGNetForums/YaBB.cgi?board=Tuning;action=display;num=1090286158"&gt;http://www.javagaming.org/cgi-bin/JGNetForums/YaBB.cgi?board=Tuning;action=display;num=1090286158&lt;/a&gt; &lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=76831"&gt;https://bugzilla.mozilla.org/show_bug.cgi?id=76831&lt;/a&gt; &lt;a href="http://www.eclipsepowered.org/archives/2004/11/18/best-jvm-settings-for-eclipse/"&gt;http://www.eclipsepowered.org/archives/2004/11/18/best-jvm-settings-for-eclipse/&lt;/a&gt;
Eclipse working set aggressively trimmed by Windows [This problem affects all NT-based Windows variants, including Win2k and XP] The Windows NT kernel has a well-known problem: When you minimize an application, Windows will trim the working set of the process. This is described in the following Microsoft knowledgebase entry, which also provides a solution: Certain applications seem particularly affected by this problem -- Java GUI applications and the Mozilla suite seem particularly sensitive. (Mozilla-based apps include a hidden configuration option to enable the solution mentioned above.) When you bring back the minimized application, the OS will start swapping the pages back into physical memory, &amp;quot;trashing&amp;quot; the disk and meanwhile making the application completely unresponsive. Waits up to a minute have been observed with large (300-350MB) working sets. The aforementioned solution prevents the OS from immediately swapping out the application, but will still swap out the application to give priority to other focused applications, so the fix has no significant negative effects on a running system. A patch was offered on the SWT dev mailing list some time ago, but it does not seem to have been recorded or accepted: &lt;a href="http://dev.eclipse.org/mhonarc/lists/platform-swt-dev/msg03710.html"&gt;http://dev.eclipse.org/mhonarc/lists/platform-swt-dev/msg03710.html&lt;/a&gt; Further references: &lt;a href="http://www.javagaming.org/cgi-bin/JGNetForums/YaBB.cgi?board=Tuning;action=display;num=1090286158"&gt;http://www.javagaming.org/cgi-bin/JGNetForums/YaBB.cgi?board=Tuning;action=display;num=1090286158&lt;/a&gt; &lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=76831"&gt;https://bugzilla.mozilla.org/show_bug.cgi?id=76831&lt;/a&gt; &lt;a href="http://www.eclipsepowered.org/archives/2004/11/18/best-jvm-settings-for-eclipse/"&gt;http://www.eclipsepowered.org/archives/2004/11/18/best-jvm-settings-for-eclipse/&lt;/a&gt;
******
org.eclipse.swt.widgets.Shell.WM_MOUSEACTIVATE(int, int),True
org.eclipse.swt.widgets.Shell.WM_SYSCOMMAND(int, int),True
#####
SWT
102756
52d678e47ee00e0c9d7473cd6841b89c8499131e
Use GtkComboBox instead of GtkCombo Attached are 2 screenshots using Fedora Core 3 (GNOME 2.8, GTK 2.4.14). goodcombo.png is GTK's native Open File dialog. badcombo.png is Eclipse's Team preferences page. You can see that Eclipse does not render the read only Combo properly. Rendering combos this way is confusing because it implies you can edit the values when you actually can't. It also doesn't match the combos in other native applications. Please render the Combo widget to match the native GTK platform. Thanks!
Use instead of Attached are 2 screenshots using Fedora Core 3 (GNOME 2.8, GTK 2.4.14). goodcombo.png is GTK's native Open File is Eclipse's Team preferences page. You can see that Eclipse does not render the read only properly. Rendering combos this way is confusing because it implies you can edit the values when you actually can't. It also doesn't match the combos in other native applications. Please render the widget to match the native GTK platform. Thanks!
******
org.eclipse.swt.widgets.Combo.add(String),False,formatting
org.eclipse.swt.widgets.Combo.add(String string, int),True
org.eclipse.swt.widgets.Combo.clearSelection(),True
org.eclipse.swt.widgets.Combo.computeSize (int wHint, int hHint, boolean),True
org.eclipse.swt.widgets.Combo.copy(),True
org.eclipse.swt.widgets.Combo.createHandle(int),True
org.eclipse.swt.widgets.Combo.cut(),True
org.eclipse.swt.widgets.Combo.deregister(),True
org.eclipse.swt.widgets.Combo.hasFocus(),True
org.eclipse.swt.widgets.Combo.hookEvents(),True
org.eclipse.swt.widgets.Combo.imContext(),True
org.eclipse.swt.widgets.Combo.deselect(int),True
org.eclipse.swt.widgets.Combo.deselectAll(),True
org.eclipse.swt.widgets.Combo.getSelection(),True
org.eclipse.swt.widgets.Combo.getSelectionIndex(),True
org.eclipse.swt.widgets.Combo.getText(),True
org.eclipse.swt.widgets.Combo.getTextLimit(),True
org.eclipse.swt.widgets.Combo.gtk_changed(int),True
org.eclipse.swt.widgets.Combo.paintWindow(),True
org.eclipse.swt.widgets.Combo.paste(),True
org.eclipse.swt.widgets.Combo.register(),True
org.eclipse.swt.widgets.Combo.releaseWidget(),True
org.eclipse.swt.widgets.Combo.remove(int),True
org.eclipse.swt.widgets.Combo.remove(int, int),True
org.eclipse.swt.widgets.Combo.removeAll(),True
org.eclipse.swt.widgets.Combo.rselect(int),True
org.eclipse.swt.widgets.Combo.setBackgroundColor(GdkColor),True
org.eclipse.swt.widgets.Combo.setBounds(int, int, int, int, boolean, boolean),True
org.eclipse.swt.widgets.Combo.setFontDescription(int),True
org.eclipse.swt.widgets.Combo.setForegroundColor(GdkColor),True
org.eclipse.swt.widgets.Combo.setItem(int, String),True
org.eclipse.swt.widgets.Combo.setItems(String []),True
org.eclipse.swt.widgets.Combo.setOrientation(),True
org.eclipse.swt.widgets.Combo.setOrientation(int),True
org.eclipse.swt.widgets.Combo.setSelection(Point),True
org.eclipse.swt.widgets.Combo.setText(String),True
org.eclipse.swt.widgets.Combo.setTextLimit(int),True
org.eclipse.swt.widgets.Combo.setToolTipText(Shell, String, String),True
#####
SWT
81834
9694ee4c04be5eaf89c0653a81d2155dad71cbaf
BIDI: StyledText does not convert European Number to Arabic Number StyledText does not convert European Number(EN) to Arabic Number(AN) on WinXP. How to reproduce: 1. Change the user language to Arabic on &amp;quot;Regional and Language Options&amp;quot; panel on Windows. (do not specify &amp;quot;-nl&amp;quot; command line arguments.) 2. Create Shell with SWT.RIGHT_TO_LEFT flag. 3. add StyledText on the shell. 4. Set text &amp;quot;012345 abc 012345&amp;quot; in StyledText widget. 5. Open and run the shell. Result: All the numbers are still European Number characters on StyledText widget. Text widget displays the first &amp;quot;012345&amp;quot; as Arabic Numbers. This is reproducible on swt-I20041221-0800-win32. (also, in Eclipse3.0GA) Thanks, Hiro
BIDI: does not convert European Number to Arabic Number does not convert European Number(EN) to Arabic Number(AN) on WinXP. How to reproduce: 1. Change the user language to Arabic on &amp;quot;Regional and Language Options&amp;quot; panel on Windows. (do not specify &amp;quot;-nl&amp;quot; command line arguments.) 2. Create Shell with  flag. 3. add on the shell. 4. Set text &amp;quot;012345 abc 012345&amp;quot; in widget. 5. Open and run the shell. Result: All the numbers are still European Number characters on widget. Text widget displays the first &amp;quot;012345&amp;quot; as Arabic Numbers. This is reproducible on swt-I20041221-0800-win32. (also, in Eclipse3.0GA) Thanks, Hiro
******
org.eclipse.swt.graphics.TextLayout.itemize(),True
#####
SWT
106372
31bf4243803459a7bb8d8f41295418405afc143b;a49d2360996f2fa2b9f5a3c5115b075c8281ec8c
Provide DND support for the StyledText widget R3.1 In order to add DND text editing support to our editors (see &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=11624" title="RESOLVED FIXED - [DnD] [navigation] text drag and drop"&gt;bug 11624&lt;/a&gt;&lt;/span&gt;) we need basic support in StyledText. Since this is one of Platform Text's 3.2 plan items it would be great to have early feedback whether we can expect something in this area for 3.2 or not.
Provide DND support for the widget R3.1 In order to add DND text editing support to our editors (see &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=11624" title="RESOLVED FIXED - [DnD] [navigation] text drag and drop"&gt;bug 11624&lt;/a&gt;&lt;/span&gt;) we need basic support in. Since this is one of Platform Text's 3.2 plan items it would be great to have early feedback whether we can expect something in this area for 3.2 or not.
******
org.eclipse.swt.custom.StyledText.installListeners(),True
org.eclipse.swt.custom.StyledText.handleMouseDown(Event),True
org.eclipse.swt.custom.StyledText.handleMouseUp(Event),True
org.eclipse.swt.dnd.DragSource.DragSource(Control, int),True
org.eclipse.swt.dnd.DragSource.drag(),True
org.eclipse.swt.dnd.DragSourceEvent.updateEvent(DNDEvent),True
org.eclipse.swt.dnd.DragSourceEvent.DragSourceEvent(DNDEvent),True
#####
SWT
115947
4db032857f93b2241fad9d301956188aae7bf246
Accessibility : Cannot set tooltip Text for image in Table Column To be Section 508 compliant, every image should have an Alt+text tooltip associated with it. When using images in a Table, you can't set a tooltip.
Accessibility : Cannot set Text for image in Column To be Section 508 compliant, every image should have an Alt+text tooltip associated with it. When using images in a Table, you can't set a tooltip.
******
org.eclipse.swt.widgets.Display.findWidget(Widget, int),True
org.eclipse.swt.widgets.Display.findWidget(int, int),True
#####
SWT
84911
7dccf54242848b0e2dd259fedb5328d3bb7fa6bb;c0619756dc294ea3fc7c34f085baeae100386061;e4fbd2aff1f4335188e952c17cb1b542da11e8b6;63eb132c4340bca5c8d71bce998d91a404d686ad;a6cdc4224be40247932a58ad002933daf84881ff;06b49e6b617fb3a7c950ffef3f6da71106d90fcf
Unspecified methods In the specs there are some methods that are probably intended to be platform/implementation specific. We feel this should be stated. You find the details in the file attached. However, broadly speaking, the functionality of methods such as toString(), hashCode() ane equals() has not been specified. Could you either say that these are totally implementation dependent, or, if this is not the case, give some functionality guidelines.
Unspecified methods In the specs there are some methods that are probably intended to be platform/implementation specific. We feel this should be stated. You find the details in the file attached. However, broadly speaking, the functionality of methods such as, ane has not been specified. Could you either say that these are totally implementation dependent, or, if this is not the case, give some functionality guidelines.
******
org.eclipse.swt.custom.SashFormData.toString(),False,changes_comments
org.eclipse.swt.custom.StackLayout.toString(),False,changes_comments
org.eclipse.swt.custom.StyleRange.equals(Object),False,changes_comments
org.eclipse.swt.custom.StyleRange.hashCode(),False,changes_comments
org.eclipse.swt.custom.StyleRange.toString(),False,changes_comments
org.eclipse.swt.graphics.Color.toString(),False,changes_comments
org.eclipse.swt.graphics.Color.hashCode(),False,changes_comments
org.eclipse.swt.graphics.Cursor.hashCode(),False,changes_comments
org.eclipse.swt.graphics.Font.equals(Object),False,changes_comments
org.eclipse.swt.graphics.FontData.equals(Object),False,changes_comments
org.eclipse.swt.graphics.FontMetrics.equals(Object),False,changes_comments
org.eclipse.swt.graphics.GC.equals(Object),False,changes_comments
org.eclipse.swt.graphics.Image.equals(Object),False,changes_comments
org.eclipse.swt.graphics.Point.hashCode(),False,changes_comments
org.eclipse.swt.graphics.RGB.equals(Object),False,changes_comments
org.eclipse.swt.graphics.Rectangle.hashCode(),False,changes_comments
org.eclipse.swt.graphics.Region.equals(Object),False,changes_comments
org.eclipse.swt.graphics.TextStyle.equals(Object),False,changes_comments
org.eclipse.swt.graphics.TextStyle.hashCode(),False,changes_comments
org.eclipse.swt.internal.image.PngChunk.toString(),False,changes_comments
org.eclipse.swt.layout.FillLayout.toString(),False,changes_comments
org.eclipse.swt.layout.FormAttachment.toString(),False,changes_comments
org.eclipse.swt.layout.FormData.toString(),False,changes_comments
org.eclipse.swt.layout.GridData.toString(),False,changes_comments
org.eclipse.swt.layout.GridLayout.toString(),False,changes_comments
org.eclipse.swt.layout.RowData.toString(),False,changes_comments
org.eclipse.swt.layout.RowLayout.toString(),False,changes_comments
org.eclipse.swt.ole.win32.Variant.toString(),False,changes_comments
org.eclipse.swt.program.Program.toString(),False,changes_comments
org.eclipse.swt.program.Program.equals(Object),False,changes_comments
org.eclipse.swt.program.Program.hashCode(),False,changes_comments
org.eclipse.swt.widgets.Event.getBounds(),False,changes_comments
org.eclipse.swt.widgets.Event.setBounds(Rectangle),False,changes_comments
org.eclipse.swt.widgets.Event.toString(),False,changes_comments
org.eclipse.swt.widgets.DirectoryDialog.getFilterPath(),True
org.eclipse.swt.widgets.FileDialog.getFileName(),False,changes_comments
org.eclipse.swt.widgets.FileDialog.getFilterNames(),False,changes_comments
org.eclipse.swt.widgets.FileDialog.setFilterExtensions(String []),False,changes_comments
org.eclipse.swt.widgets.FileDialog.setFilterNames(String[]),False,changes_comments
org.eclipse.swt.widgets.FileDialog.setFileName(String),False,changes_comments
org.eclipse.swt.widgets.FileDialog.setFilterExtensions (String []),True
org.eclipse.swt.widgets.Menu.setLocation(int, int),False,changes_comments
org.eclipse.swt.widgets.Menu.setLocation(Point),False,changes_comments
org.eclipse.swt.widgets.MenuItem.setImage(Image),False,changes_comments
org.eclipse.swt.widgets.Monitor.equals(Object),False,changes_comments
hashCode(),False,changes_comments
org.eclipse.swt.widgets.Text.getCaretLineNumber(),False,changes_comments
org.eclipse.swt.widgets.Text.getCaretLocation(),False,changes_comments
org.eclipse.swt.widgets.Text.getCaretPosition(),False,changes_comments
org.eclipse.swt.widgets.Text.getCharCount(),False,changes_comments
org.eclipse.swt.widgets.Text.getDoubleClickEnabled(),False,changes_comments
org.eclipse.swt.widgets.Text.getEchoChar(),False,changes_comments
org.eclipse.swt.widgets.Text.getEditable(),False,changes_comments
org.eclipse.swt.widgets.Text.getLineCount(),False,changes_comments
org.eclipse.swt.widgets.Text.getLineDelimiter(),False,changes_comments
org.eclipse.swt.widgets.Text.getLineHeight(),False,changes_comments
org.eclipse.swt.widgets.Text.getSelection(),False,changes_comments
org.eclipse.swt.widgets.Text.getSelectionCount(),False,changes_comments
org.eclipse.swt.widgets.Text.getSelectionText(),False,changes_comments
org.eclipse.swt.widgets.Text.getTabWidth(int),False,changes_comments
org.eclipse.swt.widgets.Text.getText(),False,changes_comments
org.eclipse.swt.widgets.Text.getText(int, int),False,changes_comments
org.eclipse.swt.widgets.Text.getTopPixel(),False,changes_comments
org.eclipse.swt.widgets.Text.setDoubleClickEnabled(boolean),False,changes_comments
org.eclipse.swt.widgets.Text.setEchoChar(char),False,changes_comments
org.eclipse.swt.widgets.Text.setOrientation(int),False,changes_comments
#####
SWT
84906
818efc8b46c5fda97b0e6aca4517208adad22a3f;abee13b3bcd9260c2ca7824ce15632593cf59218;fb124d2ba5ec40e564190dc83884d6e6c7990509;b65ea803613e5e85e97de7c01ac295b7c68fa954;03b2434a9978fa54eb996a51c7fdd80da2045f2
We found some typos or broken links. See file attached.
We found some typos or broken links. See file attached.
******
org.eclipse.swt.dnd.TextTransfer.javaToNative(Object, TransferData),False,changes_comments
org.eclipse.swt.dnd.TextTransfer.nativeToJava(TransferData),False,changes_comments
org.eclipse.swt.graphics.Device.getSystemColor(int),True
org.eclipse.swt.program.Program.getName (),False,changes_comments
org.eclipse.swt.widgets.Decorations.setMaximized (boolean),False,changes_comments
org.eclipse.swt.widgets.Decorations.setText(String),False,changes_comments
org.eclipse.swt.widgets.Display.wake(),False,changes_comments
org.eclipse.swt.widgets.Display.getData(),False,changes_comments
org.eclipse.swt.widgets.Display.getData(String),False,changes_comments
org.eclipse.swt.widgets.List.getItemHeight(),False,changes_comments
org.eclipse.swt.widgets.List.setSelection(int),False,changes_comments
org.eclipse.swt.widgets.Menu.getEnabled(),False,changes_comments
org.eclipse.swt.widgets.Menu.setEnabled(boolean),False,changes_comments
org.eclipse.swt.widgets.Menu.isEnabled(),False,changes_comments
org.eclipse.swt.widgets.MenuItem.addSelectionListener(SelectionListener),False,changes_comments
org.eclipse.swt.widgets.MenuItem.getEnabled(),False,changes_comments
org.eclipse.swt.widgets.MenuItem.isEnabled(),False,changes_comments
org.eclipse.swt.widgets.MenuItem.setEnabled(boolean),False,changes_comments
org.eclipse.swt.widgets.ProgressBar.getSelection(),False,changes_comments
org.eclipse.swt.widgets.ProgressBar.setSelection(int),False,changes_comments
org.eclipse.swt.widgets.Scale.getSelection(),False,changes_comments
org.eclipse.swt.widgets.Scale.setSelection(int),False,changes_comments
org.eclipse.swt.widgets.ScrollBar.getSelection(),False,changes_comments
org.eclipse.swt.widgets.ScrollBar.setSelection(int),False,changes_comments
org.eclipse.swt.widgets.Shell.setMinimumSize(int, int),False,changes_comments
org.eclipse.swt.widgets.Shell.setMinimumSize(Point),False,changes_comments
org.eclipse.swt.widgets.Slider.getSelection(),False,changes_comments
org.eclipse.swt.widgets.Slider.setSelection(int),False,changes_commentsint),False,changes_comments
org.eclipse.swt.widgets.TreeItem.TreeItem(Tree, int),False,changes_comments
org.eclipse.swt.widgets.TreeItem.TreeItem (Tree, int, int),False,changes_comments
org.eclipse.swt.widgets.TreeItem.TreeItem (TreeItem, int),False,changes_comments
org.eclipse.swt.widgets.TreeItem.TreeItem (TreeItem, int, int),False,changes_comments
#####
SWT
14654
56d7d44784ad7e2547a3e9a0ea84e65586278aec
[typing] Single line selection on triple-click This is a common and convenient behavior for text editors/IDEs which is missing. Would be nice to have it. Switching to keyboard and doing &amp;quot;shift+arrow down&amp;quot; seems like a lot more effort for achieving the same effect.
[typing] Single line selection on triple-click This is a common and convenient behavior for text editors/IDEs which is missing. Would be nice to have it. Switching to keyboard and doing &amp;quot;shift+arrow down&amp;quot; seems like a lot more effort for achieving the same effect.
******
org.eclipse.swt.custom.StyledText.doMouseLocationChange(int, int, boolean),True
org.eclipse.swt.custom.StyledText.doMouseWordSelect(int, int, int),True
org.eclipse.swt.custom.StyledText.installListeners(),True
org.eclipse.swt.custom.StyledText.handleMouseDoubleClick(Event),True
org.eclipse.swt.custom.StyledText.handleMouseDown(Event),True
org.eclipse.swt.custom.StyledText.handleMouseMove(Event),True
org.eclipse.swt.custom.StyledText.handleMouseUp(Event),True
org.eclipse.swt.custom.StyledText.setMouseWordSelectionAnchor(),True
#####
SWT
82500
a3530e14bf1a9d7cac50d2cca9f924bc03d518fd
TabFolder should not use PtCalcCanvas in getClientArea Due to the nature of the widget PtPanelGroup, you cannot use PtCalcCanvas to get the widgets drawing area. There is a limitation in photon where you cannot draw a surface outside of a widgets canvas. The tabs are control surfaces. Therefore if you use PtCalcCanvas to determine the drawing area, you will overwrite the tabs. I will attach a patch to fix this.
should not use in Due to the nature of the widget, you cannot use to get the widgets drawing area. There is a limitation in photon where you cannot draw a surface outside of a widgets canvas. The tabs are control surfaces. Therefore if you use to determine the drawing area, you will overwrite the tabs. I will attach a patch to fix this.
******
org.eclipse.swt.widgets.TabFolder.createHandle(int),False,formatting
createItem(TabItem, int),False,formatting
destroyItem(TabItem),False,formatting
getClientArea(),True
#####
SWT
92241
b2aaf64564a26dcc4801edc4c810d8ab448c7216
StyledText should not fill the clipboard on every selection change 3.1 stream See &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=92209" title="RESOLVED FIXED - [implementation] Scrolling performance degrades with size of selection"&gt;bug 92209&lt;/a&gt;&lt;/span&gt;. Filling the clipboard with the current selection upon every selection change *really* hurts one test case: selecting big editor areas and changing the selection with the arrow keys and holding shift (or selecting large areas with the mouse). Note that this happens on Windows as well as GTK. IMO, copying the entire (almost) document content upon every selection change is way too expensive. Is there a way to avoid this?
should not fill the clipboard on every selection change 3.1 stream See &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=92209" title="RESOLVED FIXED - [implementation] Scrolling performance degrades with size of selection"&gt;bug 92209&lt;/a&gt;&lt;/span&gt;. Filling the clipboard with the current selection upon every selection change *really* hurts one test case: selecting big editor areas and changing the selection with the arrow keys and holding shift (or selecting large areas with the mouse). Note that this happens on Windows as well as GTK. IMO, copying the entire (almost) document content upon every selection change is way too expensive. Is there a way to avoid this?
******
org.eclipse.swt.custom.StyledText.installListeners(),True
org.eclipse.swt.custom.StyledText.handleKeyDown(Event),True
org.eclipse.swt.custom.StyledText.handleMouseUp(Event),True
org.eclipse.swt.custom.StyledText.sendSelectionEvent(),True
org.eclipse.swt.custom.StyledText.setClipboardContent(int, int, int),True
#####
SWT
108591
a8b66e5526c4d5742c189dc14fbd5713d660c0e6;f295d81c96c5f0cad60547a25236d1a3bb649162;62412468942caaf5947bb17a0f81aff115b7f1d0
SWT StyledText does not support inline Input method On MacOS X, When the user turns on Japanese Input Method and types japanese characters on SWT StyledText, the floating Input Window shows up. Since the inline IM window shows up on SWT Text widget, SWT StyledText widget should also display the inline IM on the widget. This happens also on Chinese and Korean Input method.
SWT does not support inline Input method On MacOS X, When the user turns on Japanese Input Method and types japanese characters on SWT, the floating Input Window shows up. Since the inline IM window shows up on SWT widget, widget should also display the inline IM on the widget. This happens also on Chinese and Korean Input method.
******
org.eclipse.swt.custom.StyledText.getCaretDirection(),True
org.eclipse.swt.custom.StyledText.installListeners(),True
org.eclipse.swt.custom.StyledText.setCaretLocation(Point, int),True
org.eclipse.swt.custom.StyledTextRenderer.getTextLayout(int, int, int, int),True
org.eclipse.swt.graphics.TextLayout.drawLines(boolean, int, int, int, StyleItem),True
org.eclipse.swt.widgets.Canvas.COMPOSITION(int, int),True
org.eclipse.swt.widgets.Canvas.WM_KILLFOCUS(int, int),True
org.eclipse.swt.widgets.Caret.resizeIME(),True
#####
SWT
108813
74beac4f08c1db38193542297b2d9ea6b2957303
LineStyles in Very Long Lines Takes Forever Well, not literally forever, but way way too long -- users will have to &amp;quot;end process&amp;quot; and start over. &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=108806" title="CLOSED FIXED - Very-long-line XML file appears to hang Eclipse"&gt;Bug 108806&lt;/a&gt;&lt;/span&gt; is the most recent one opened against us in WTP, but have seen before for less extreme examples. I'm opening this bug to determine what improvements can be made at SWT level. I've marked as major since &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=108806" title="CLOSED FIXED - Very-long-line XML file appears to hang Eclipse"&gt;bug 108806&lt;/a&gt;&lt;/span&gt; was marked as major by user-client. For the case described in &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=108806" title="CLOSED FIXED - Very-long-line XML file appears to hang Eclipse"&gt;bug 108806&lt;/a&gt;&lt;/span&gt;, I've noticed that for the 500K character line, we produce about 100K &amp;quot;styles&amp;quot; passed back to StyledText via LineStyleEvent. One thing I noticed, for example, is that a loop in DisplayRenderer goes through each style, eventually calling TextLayout.setStyle. There, is some code in there which is creating a (new) array of TextStyles, and it grows the array one item at a time, ending up using 100K System.arraycopies to grow the array &amp;quot;as they come in one by one&amp;quot;. I did not test, but seems there might be ways to anticipate the size of this array and avoid all those array copies? So, first question ... why is it even requested of us to provide &amp;quot;all StyleRanges&amp;quot; for the line, when they are not all visible, obviously. Could some short cut be made there? Second question, do you think these &amp;quot;DisplayRendering&amp;quot; methods could be made more efficient, to at least allow user to limp along, or would problems just be encountered further along, such as is they try to type. Third question, any advice on how to proceed?
in Very Long Lines Takes Forever Well, not literally forever, but way way too long -- users will have to &amp;quot;end process&amp;quot; and start over. &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=108806" title="CLOSED FIXED - Very-long-line XML file appears to hang Eclipse"&gt;Bug 108806&lt;/a&gt;&lt;/span&gt; is the most recent one opened against us in WTP, but have seen before for less extreme examples. I'm opening this bug to determine what improvements can be made at SWT level. I've marked as major since &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=108806" title="CLOSED FIXED - Very-long-line XML file appears to hang Eclipse"&gt;bug 108806&lt;/a&gt;&lt;/span&gt; was marked as major by user-client. For the case described in &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=108806" title="CLOSED FIXED - Very-long-line XML file appears to hang Eclipse"&gt;bug 108806&lt;/a&gt;&lt;/span&gt;, I've noticed that for the 500K character line, we produce about 100K &amp;quot;styles&amp;quot; passed back to via. One thing I noticed, for example, is that a loop in goes through each style, eventually calling. There, is some code in there which is creating a (new) array of, and it grows the array one item at a time, ending up using 100K to grow the array &amp;quot;as they come in one by one&amp;quot;. I did not test, but seems there might be ways to anticipate the size of this array and avoid all those array copies? So, first question ... why is it even requested of us to provide &amp;quot;all &amp;quot; for the line, when they are not all visible, obviously. Could some short cut be made there? Second question, do you think these &amp;quot;&amp;quot; methods could be made more efficient, to at least allow user to limp along, or would problems just be encountered further along, such as is they try to type. Third question, any advice on how to proceed?
******
org.eclipse.swt.graphics.TextLayout.TextLayout(Device),True
org.eclipse.swt.graphics.TextLayout.getRanges(),True
org.eclipse.swt.graphics.TextLayout.getStyle(int),True
org.eclipse.swt.graphics.TextLayout.getStyles(),True
org.eclipse.swt.graphics.TextLayout.merge(int, int),True
org.eclipse.swt.graphics.TextLayout.setStyle(TextStyle, int, int),True
org.eclipse.swt.graphics.TextLayout.setText(String),True
#####
SWT
78856
662c4fb9a2cc250dcf2afa2987b1cba43da86c4a
[Clipboard] SWT has no support for Image copy to clipboard This is now supported in JDK 1.4 but there is no way to access this through the SWT clipboard. Eclipse plug-ins have to by-pass SWT and utilize the awt clipboard in order to support copy / paste into external applications. SWT should support this for their Image class. Additionally it would be good to have a delayed render capability, where the image isn't requested until the user pastes into Word. This would allow an interim format (SVG) to be stored until the bitmap render is required thereby saving the expensive memory requirements for bitmaps.
[Clipboard] SWT has no support for Image copy to clipboard This is now supported in JDK 1.4 but there is no way to access this through the SWT clipboard. Eclipse plug-ins have to by-pass SWT and utilize the awt clipboard in order to support copy / paste into external applications. SWT should support this for their class. Additionally it would be good to have a delayed render capability, where the image isn't requested until the user pastes into Word. This would allow an interim format (SVG) to be stored until the bitmap render is required thereby saving the expensive memory requirements for bitmaps.
******
#####
SWT
100095
ac2d26eca80dd977634b235b54f7af8b772fe42f
[DND] Consider making URLTransfer public I already read a comment by Veronika, that URLTransfer is intentionally not public, because it is not yet fully implemented on all platforms. But could'nt you make it public and provide some fake implementation for platforms that are not yet implemented? Just for example, System Tray is active, though not implemented on all OS. Same to the Browser widget. It would be sad to loose URLTransfers existing functionality on Windows. The reason I am asking is because URLTransfer is the only Transfer that allows to easily read the URL out of a DND from the Internet Explorer. Even Firefox is not supporting DND from the IE. Ben
[DND] Consider making public I already read a comment by Veronika, that is intentionally not public, because it is not yet fully implemented on all platforms. But could'nt you make it public and provide some fake implementation for platforms that are not yet implemented? Just for example, is active, though not implemented on all OS. Same to the widget. It would be sad to loose existing functionality on Windows. The reason I am asking is because is the only Transfer that allows to easily read the URL out of a DND from the Internet Explorer. Even Firefox is not supporting DND from the IE. Ben
******
org.eclipse.swt.dnd.URLTransfer.javaToNative(Object, TransferData),True
org.eclipse.swt.dnd.URLTransfer.nativeToJava(TransferData),True
#####
SWT
111259
01ce46164bcfdb8bac58e5d5fefaff12c515248d
[DND] Insertion mark in TreeViewer does not go away on GTK In the logic example, on GTK, if you click-and-drop a part in the outline view, the insertion mark does not go away when you exit the viewer. You see the same problem even if you don't drop the part in the outline.
[DND] Insertion mark in does not go away on GTK In the logic example, on GTK, if you click-and-drop a part in the outline view, the insertion mark does not go away when you exit the viewer. You see the same problem even if you don't drop the part in the outline.
******
org.eclipse.swt.widgets.Tree.setInsertMark(TreeItem, boolean),True
org.eclipse.swt.dnd.TableDropTargetEffect.dragLeave(DropTargetEvent),True
#####
SWT
91317
3114c0771e236970e2e710942b819990aa75f96f;b72f4da54c4730cb476a2890ad4890284e3196ef
Spinner should support negative values Version: 3.1.0 Build id: I20050413-0910 Spinner should allow negavtive values.
should support negative values Version: 3.1.0 Build id: I20050413-0910 should allow negavtive values.
******
org.eclipse.swt.widgets.Spinner.actionProc(int, int),True
org.eclipse.swt.widgets.Spinner.getSelectionText(),True
org.eclipse.swt.widgets.Spinner.kEventControlSetFocusPart(int, int, int),True
org.eclipse.swt.widgets.Spinner.kEventUnicodeKeyPressed(int, int, int),True
org.eclipse.swt.widgets.Spinner.setMaximum(int),True
org.eclipse.swt.widgets.Spinner.setMinimum(int),True
org.eclipse.swt.widgets.Spinner.setSelection (int, boolean, boolean, boolean),True
org.eclipse.swt.widgets.Spinner.setValues (int, int, int, int, int, int),True
org.eclipse.swt.widgets.Spinner.verifyText (String, int, int, Event),True
#####
SWT
87460
83050d109621d80c5d198f71b87b4cb90dcdef41
StyledText: Caret location not updated when line style is used SWT-win32, v3124 In the snippet below, there is a StyledText with a line style listener. In the line style listener, a bold font style is set, changing the width of the rendered text. I would have expected the on-screen caret location (not the offset) to be adjusted to the change. However, this does not happen. For an italic style, it does not look right either. Might be a bug? --- import org.eclipse.swt.*; import org.eclipse.swt.custom.*; import org.eclipse.swt.graphics.*; import org.eclipse.swt.layout.*; import org.eclipse.swt.widgets.*; public class LineStyleCaretTest { public static void main(String[] args) { Display display = new Display(); Shell shell = new Shell(display); shell.setLayout(new FillLayout()); Font font = new Font(display, &amp;quot;Arial&amp;quot;, 12, SWT.NORMAL); final StyledText text = new StyledText(shell, SWT.MULTI); text.setFont(font); text.setText(&amp;quot;Standard Widget Toolkit&amp;quot;); text.setCaretOffset(text.getText().length()); text.addLineStyleListener(new LineStyleListener() { public void lineGetStyle(LineStyleEvent event) { StyleRange[] styles = new StyleRange[1]; styles[0] = new StyleRange(); styles[0].start = 0; styles[0].length = text.getText().length(); styles[0].fontStyle = SWT.BOLD; event.styles = styles; } }); shell.setSize(300, 100); shell.open(); while (!shell.isDisposed()) { if (!display.readAndDispatch()) { display.sleep(); } } font.dispose(); display.dispose(); } }
: Caret location not updated when line style is used SWT-win32, v3124 In the snippet below, there is a with a line style listener. In the line style listener, a bold font style is set, changing the width of the rendered text. I would have expected the on-screen caret location (not the offset) to be adjusted to the change. However, this does not happen. For an italic style, it does not look right either. Might be a bug? --- 
******
org.eclipse.swt.custom.StyledText.addLineStyleListener(LineStyleListener),True
org.eclipse.swt.custom.StyledText.removeLineStyleListener(LineStyleListener),True
#####
SWT
92757
0b4a954e0c99e688d30a6171c0a1a19382ce7d46;2909497e0bcb1e72bc32714fe007581c2de74fb2
StyledText: Add caret listener null
: Add caret listener null
******
org.eclipse.swt.custom.StyledText.setCaretOffset(int),True
org.eclipse.swt.custom.StyledText.doContentEnd(),True
org.eclipse.swt.custom.StyledText.doContentStart(),True
org.eclipse.swt.custom.StyledText.doCursorPrevious(),True
org.eclipse.swt.custom.StyledText.doCursorNext(),True
org.eclipse.swt.custom.StyledText.doLineDown(boolean),True
org.eclipse.swt.custom.StyledText.doLineEnd(),True
org.eclipse.swt.custom.StyledText.doLineStart(),True
org.eclipse.swt.custom.StyledText.doLineUp(boolean),True
org.eclipse.swt.custom.StyledText.doMouseLocationChange(int, int, boolean),True
org.eclipse.swt.custom.StyledText.doPageDown(boolean, int),True
org.eclipse.swt.custom.StyledText.doPageEnd(),True
org.eclipse.swt.custom.StyledText.doPageStart(),True
org.eclipse.swt.custom.StyledText.doPageUp(boolean, int),True
org.eclipse.swt.custom.StyledText.doSelectionCursorNext(),True
org.eclipse.swt.custom.StyledText.doSelectionCursorPrevious(),True
org.eclipse.swt.custom.StyledText.doSelectionWordNext(),True
org.eclipse.swt.custom.StyledText.doSelectionWordPrevious(),True
org.eclipse.swt.custom.StyledText.doVisualPrevious(),True
org.eclipse.swt.custom.StyledText.doVisualNext(),True
org.eclipse.swt.custom.StyledText.doWordPrevious(),True
org.eclipse.swt.custom.StyledText.handleCompositionChanged(Event),True
org.eclipse.swt.custom.StyledText.handleTextChanging(TextChangingEvent),True
org.eclipse.swt.custom.StyledText.paste(),True
org.eclipse.swt.custom.StyledText.reset(),True
org.eclipse.swt.custom.StyledText.setBlockSelectionLocation(int, int, org.eclipse.swt.custom.StyledText.boolean),True
org.eclipse.swt.custom.StyledText.setBlockSelectionOffset(int, boolean),True
org.eclipse.swt.custom.StyledText.setCaretOffset(int),True
org.eclipse.swt.custom.StyledText.setSelection(int, int, boolean, boolean),True
org.eclipse.swt.custom.StyledTextListener.handleEvent(Event),True
#####
SWT
83408
b84283a91e582d2270aa3a7806c977cb6509440e;63b280b539f9d81d7dcad44df5b189827eb16556
Support links in StyledText StyledText should allow hyperlinks to be specified. The links must become active (cursor changes, underlined, colour change) when the mouse is over the link or when the user tabs to the link. Links must be traversable by tabbing. There needs to be an event when the link is selected and when the link is activated (e.g. in IE the status bar shows detailed info about the link when the user hovers over it). The link should support a tooltip. Must be able to specify whether the link is always underlined or only when active.
Support links in should allow hyperlinks to be specified. The links must become active (cursor changes, underlined, colour change) when the mouse is over the link or when the user tabs to the link. Links must be traversable by tabbing. There needs to be an event when the link is selected and when the link is activated (e.g. in IE the status bar shows detailed info about the link when the user hovers over it). The link should support a tooltip. Must be able to specify whether the link is always underlined or only when active.
******
org.eclipse.swt.custom.StyledText.handleMouseMove(Event),True
org.eclipse.swt.custom.StyledText.reset(),True
org.eclipse.swt.custom.StyledTextRenderer.getStyleRange(StyleRange),True
org.eclipse.swt.custom.StyledTextRenderer.setStyleRanges(int[], StyleRange[]),True
org.eclipse.swt.graphics.TextLayout.createGdipBrush(Color, int),True
org.eclipse.swt.graphics.TextLayout.draw(GC, int, int, int, int, Color),True
org.eclipse.swt.graphics.TextLayout.drawUnderline(int, int, int, int, int, StyleItem[], int, int, int, RECT, RECT, int, int, Rectangle),True
org.eclipse.swt.graphics.TextLayout.drawUnderlineGDIP(int, int, int, int, int, StyleItem[], int, int, int, RECT, RECT, int, int, int, Rectangle),True
org.eclipse.swt.graphics.TextStyle.TextStyle(TextStyle),True
equals(Object),True
#####
SWT
108236
ce240e0de695ebde57caa84a10aa9789d4e9f3df
Spinner does not allow min == max R3.1 Build id: I20050627-1435 In the following, the setMaximum has no effect: Spinner spinner = new Spinner(parent, SWT.NONE); spinner.setMinimum(1); spinner.setMaximum(1); The maximum is ignored, keeping the default of 100. In setMaximum there is the following code: if (value &amp;lt;= min [0]) return; Likewise, setMinimum has: if (value &amp;gt;= max [0]) return; It should be possible to restrict the range to a single value. In my scenario, I'm working on an example app that lets you choose the number of people buying a given activity as part of an adventure package, where the max should be the head count for the package. The default is 1.
does not allow R3.1 Build id: I20050627-1435 In the following, the has no effect: The maximum is ignored, keeping the default of 100. In there is the following code: Likewise, has: It should be possible to restrict the range to a single value. In my scenario, I'm working on an example app that lets you choose the number of people buying a given activity as part of an adventure package, where the max should be the head count for the package. The default is 1.
******
org.eclipse.swt.widgets.Spinner.setMaximum (int),True
org.eclipse.swt.widgets.Spinner.setMinimum(int),True
org.eclipse.swt.widgets.Spinner.setValues(int, int, int, int, int, int),True
#####
SWT
104545
a663b8f6ede19c442c9466069d1f4f10ed56afcd
Make default size of empty composites smaller Could the following two constants in Widget.java be changed to something smaller? /* Default widths for widgets */ static final int DEFAULT_WIDTH = 64; static final int DEFAULT_HEIGHT = 64; Anything less than or equal to 16 would work for us, 0 would be OK too. I have run our tests (JFace, UI, RCP) and they run fine when the constants are 0. Background: When you write an RCP app and enable the cool bar, the cool bar will initially be empty, but 64x64 pixels in size. On Windows, you cannot see the border of the empty coolbar so the user gets a big empty space at the top of their window and might be confused. See also &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=70049" title="RESOLVED INVALID - [PerspectiveBar] Coolbar Default Height is Gigantic"&gt;Bug 70049&lt;/a&gt;&lt;/span&gt;, where the same problem occurs in an RCP application that starts off with no open perspective and thus no cool bar items.
Make default size of empty composites smaller Could the following two constants in be changed to something smaller? /* Default widths for widgets */ Anything less than or equal to 16 would work for us, 0 would be OK too. I have run our tests (JFace, UI, RCP) and they run fine when the constants are 0. Background: When you write an RCP app and enable the cool bar, the cool bar will initially be empty, but 64x64 pixels in size. On Windows, you cannot see the border of the empty coolbar so the user gets a big empty space at the top of their window and might be confused. See also &lt;span class="bz_closed"&gt;&lt;a href="show_bug.cgi?id=70049" title="RESOLVED INVALID - [] Default Height is Gigantic"&gt;Bug 70049&lt;/a&gt;&lt;/span&gt;, where the same problem occurs in an RCP application that starts off with no open perspective and thus no cool bar items.
******
org.eclipse.swt.widgets.CoolBar.computeSize(int, int, boolean),True
#####
SWT
95410
7bb044e5c9466f1fefdeb85ae3faca48de0e8d34
GDI+ drawString is not consistent with GDI If you have a structure which is rendered to a GC, you need to be able to predict things like how large a String is going to be painted. But, if a previous visitor has triggered GDI+, drawString's behavior is altered. The chars get expanded and compressed in funny ways, and generally look bad.
GDI+ is not consistent with GDI If you have a structure which is rendered to a GC, you need to be able to predict things like how large a String is going to be painted. But, if a previous visitor has triggered GDI+, 's behavior is altered. The chars get expanded and compressed in funny ways, and generally look bad.
******
org.eclipse.swt.graphics.GC.drawString(String, int, int, boolean),True
stringExtent(String),True
org.eclipse.swt.graphics.TextLayout.draw(GC, int, int, int, int, Color, Color),True
#####
SWT
103863
3f16243f15249d0c5b9acd8d735db116a6188e83
Support encapsulation in SWT layout mechanism Currently, SWT layouts work like this: - Some event occurs in the app - Method X updates a set of widgets - Method X notifies the wigdet's layout of the change (by calling changed() and layout()) This prevents writing any black box object that knows how to update a set of wigdets without depending on where those wigdets are used. This is creating a severe maintnance problem within the Eclipse UI. If code modifies a widget, it needs to: 1. Know about every other piece of code that calls that widget's computeSize method. 2. Know which object to trigger a layout on. 3. Know when to trigger a layout. (Or when to defer and undefer layouts) Issue 1 creates very large (and complicated) update methods. Issue 2 means that the spaghetti code is always specific to a particular layout and cannot be reused. Even minor layout changes often require severe refactoring. Issue 3 is impossible to get right. In our world, everything is triggered by listeners. Even though the layout only needs to happen after the last listener has done its thing and control returns to the event loop, there is no way to know that &amp;quot;this will be the last change to this widget before control returns to the event loop&amp;quot;. We work around this by heuristically batching updates together, and making individual update methods responsible for as many widgets as possible. Our current heuristics work well, but the code is extremely complicated and brittle. This PR requests the following: a. Provide a way to flag a widget as &amp;quot;changed&amp;quot;, such that any dependant layout will be notified and triggered when control returns to the event loop. (The client code MUST NOT be responsible for calling layout(...) or setLayoutDeferred) b. Provide a &amp;quot;preferred size changed&amp;quot; listener, so that a widget can have its position managed by something other than its immediate parent (aka proxy controls). c. Provide a way for layouts to indicate whether a change to a particular child will affect their own preferred size. This will be needed for SWT to correctly compute the effects of a &amp;quot;changed&amp;quot; event. Not sure whether to flag as &amp;quot;blocker&amp;quot; or &amp;quot;enhancement&amp;quot;. It is really an enhancement, but it is blocking further work on the Eclipse layouts. Flagging as major as a compromise. :-)
Support encapsulation in SWT layout mechanism Currently, SWT layouts work like this: - Some event occurs in the app - Method X updates a set of widgets - Method X notifies the wigdet's layout of the change (by calling and ) This prevents writing any black box object that knows how to update a set of wigdets without depending on where those wigdets are used. This is creating a severe maintnance problem within the Eclipse UI. If code modifies a widget, it needs to: 1. Know about every other piece of code that calls that widget's method. 2. Know which object to trigger a layout on. 3. Know when to trigger a layout. (Or when to defer and undefer layouts) Issue 1 creates very large (and complicated) update methods. Issue 2 means that the spaghetti code is always specific to a particular layout and cannot be reused. Even minor layout changes often require severe refactoring. Issue 3 is impossible to get right. In our world, everything is triggered by listeners. Even though the layout only needs to happen after the last listener has done its thing and control returns to the event loop, there is no way to know that &amp;quot;this will be the last change to this widget before control returns to the event loop&amp;quot;. We work around this by heuristically batching updates together, and making individual update methods responsible for as many widgets as possible. Our current heuristics work well, but the code is extremely complicated and brittle. This PR requests the following: a. Provide a way to flag a widget as &amp;quot;changed&amp;quot;, such that any dependant layout will be notified and triggered when control returns to the event loop. (The client code MUST NOT be responsible for calling ) b. Provide a &amp;quot;preferred size changed&amp;quot; listener, so that a widget can have its position managed by something other than its immediate parent (aka proxy controls). c. Provide a way for layouts to indicate whether a change to a particular child will affect their own preferred size. This will be needed for SWT to correctly compute the effects of a &amp;quot;changed&amp;quot; event. Not sure whether to flag as &amp;quot;blocker&amp;quot; or &amp;quot;enhancement&amp;quot;. It is really an enhancement, but it is blocking further work on the Eclipse layouts. Flagging as major as a compromise. :-)
******
org.eclipse.swt.widgets.Composite.layout(boolean, boolean),True
org.eclipse.swt.widgets.Composite.setLayoutDeferred(boolean),True
org.eclipse.swt.widgets.Display.readAndDispatch(),True
#####
SWT
119192
49d8ee915a6006746596a7d40978b42b50fa61b3
[CCombo] CCombo Mouse problem (listeners not fired) The CCombo does not responde to MouseMove or MouseTrack listener. Also, does not respond as Control throught Display (Gets Text and Button).
[]  Mouse problem (listeners not fired) The does not responde to or  listener. Also, does not respond as Control throught (Gets Text and Button).
******
org.eclipse.swt.custom.CCombo.CCombo(Composite, int),True
org.eclipse.swt.custom.CCombo.arrowEvent(Event),True
org.eclipse.swt.custom.CCombo.textEvent(Event),True
#####
SWT
108792
76bc5fe721fcc814537369ff65508640f6ef36c6
Horizontal caret position lost due to StyledText.replaceStyleRanges I20050830-0800 - enable Mark Occurences, disable 'sticky' occurences - in the following CU place the caret instead of '|': class |Foo { } - press arrow down - wait for occurences to be updated - press arrow up -&amp;gt; caret position is: c|lass Foo {...
Horizontal caret position lost due to I20050830-0800 - enable Mark Occurences, disable 'sticky' occurences - in the following CU place the caret instead of '|': - press arrow down - wait for occurences to be updated - press arrow up -&amp;gt; caret position is: 
******
org.eclipse.swt.custom.StyledText.setStyleRanges(int, int, int[], StyleRange[], boolean),True
#####